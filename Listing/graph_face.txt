; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\graph_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\graph_face.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\graph_face.crf --no_multibyte_chars ..\APP\graph_Face.c]
                          THUMB

                          AREA ||i.CreateWGraph||, CODE, READONLY, ALIGN=2

                  CreateWGraph PROC
;;;182    WM_HWIN CreateWGraph(void);
;;;183    WM_HWIN CreateWGraph(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;184    
;;;185    	GhWin = GUI_CreateDialogBox(_aDialogCreateGraph, GUI_COUNTOF(_aDialogCreateGraph), _cbDialogGraph, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4604              MOV      r4,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  4623              MOV      r3,r4
00000e  4a05              LDR      r2,|L1.36|
000010  2107              MOVS     r1,#7
000012  9001              STR      r0,[sp,#4]
000014  4804              LDR      r0,|L1.40|
000016  f7fffffe          BL       GUI_CreateDialogBox
00001a  4904              LDR      r1,|L1.44|
00001c  6008              STR      r0,[r1,#0]  ; GhWin
;;;186    	
;;;187    	return GhWin;	
00001e  4608              MOV      r0,r1
000020  6800              LDR      r0,[r0,#0]  ; GhWin
;;;188    }
000022  bd1c              POP      {r2-r4,pc}
;;;189    
                          ENDP

                  |L1.36|
                          DCD      _cbDialogGraph
                  |L1.40|
                          DCD      _aDialogCreateGraph
                  |L1.44|
                          DCD      GhWin

                          AREA ||i.Graph_delete_input||, CODE, READONLY, ALIGN=1

                  Graph_delete_input PROC
;;;214    
;;;215    void Graph_delete_input( )
000000  4770              BX       lr
;;;216    {
;;;217    
;;;218    
;;;219    }
;;;220    
                          ENDP


                          AREA ||i.Graph_ent||, CODE, READONLY, ALIGN=2

                  Graph_ent PROC
;;;200    
;;;201    void Graph_ent( )
000000  b500              PUSH     {lr}
;;;202    {
;;;203    	if( FLAG_INPUTAUTH ){
000002  4806              LDR      r0,|L3.28|
000004  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
000006  b128              CBZ      r0,|L3.20|
;;;204    		
;;;205    		FLAG_INPUTAUTH = 0;
000008  2000              MOVS     r0,#0
00000a  4904              LDR      r1,|L3.28|
00000c  7008              STRB     r0,[r1,#0]
;;;206    		Graph_value_correct();
00000e  f7fffffe          BL       Graph_value_correct
000012  e002              B        |L3.26|
                  |L3.20|
;;;207    		
;;;208    	}else{
;;;209    
;;;210    		FLAG_INPUTAUTH = 1;
000014  2001              MOVS     r0,#1
000016  4901              LDR      r1,|L3.28|
000018  7008              STRB     r0,[r1,#0]
                  |L3.26|
;;;211    	}
;;;212    	
;;;213    }
00001a  bd00              POP      {pc}
;;;214    
                          ENDP

                  |L3.28|
                          DCD      FLAG_INPUTAUTH

                          AREA ||i.Graph_value_correct||, CODE, READONLY, ALIGN=1

                  Graph_value_correct PROC
;;;220    
;;;221    void Graph_value_correct( )
000000  4770              BX       lr
;;;222    {
;;;223    
;;;224    
;;;225    }
;;;226    
                          ENDP


                          AREA ||i.KEY_DOWN_GRAPH||, CODE, READONLY, ALIGN=1

                  KEY_DOWN_GRAPH PROC
;;;194    
;;;195    void KEY_DOWN_GRAPH(int handle )
000000  4770              BX       lr
;;;196    {
;;;197    
;;;198    
;;;199    }
;;;200    
                          ENDP


                          AREA ||i.KEY_GRAPH_INPUT||, CODE, READONLY, ALIGN=1

                  KEY_GRAPH_INPUT PROC
;;;189    
;;;190    void KEY_GRAPH_INPUT(char *strx){
000000  4770              BX       lr
;;;191    	
;;;192    	
;;;193    }
;;;194    
                          ENDP


                          AREA ||i._cbDialogGraph||, CODE, READONLY, ALIGN=2

                  _cbDialogGraph PROC
;;;55      
;;;56     static void _cbDialogGraph(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b0a3              SUB      sp,sp,#0x8c
000006  4605              MOV      r5,r0
;;;57     	
;;;58     	WM_HWIN hItem;
;;;59     	int NCode;
;;;60     	int Id,MAX_LEN = 0;
000008  2700              MOVS     r7,#0
;;;61     	int i;
;;;62     	char *winName;
;;;63     	
;;;64     	static struct SListData slistG[] = {
;;;65     		
;;;66     		{T_Button ,"内阻测试","I.R. TEST",  	0x00B22222 , 0,		ID_BUTTON_25 },
;;;67     		{T_Button , "程控电源", "POWER",  0x00B22222 , 0, ID_BUTTON_26 },
;;;68     		{T_Button ,"程控负载","LOAD",  	0x00B22222 , 0, 	ID_BUTTON_27 },
;;;69     		{T_Button ,"充放电", "C&DC", 	0x00B22222 , 0, 	ID_BUTTON_28 },
;;;70     		{T_Button ,"系统设置", "SYSTEM", 	0x00B22222 , 0, 	ID_BUTTON_29 },
;;;71     	
;;;72     	};
;;;73     	
;;;74     	GRAPH_SCALE_Handle hScaleH ;
;;;75     	GRAPH_SCALE_Handle hScaleV ;
;;;76      	GRAPH_DATA_Handle  IData,VData;
;;;77     
;;;78     	switch (pMsg->MsgId) {
00000a  6828              LDR      r0,[r5,#0]
00000c  280e              CMP      r0,#0xe
00000e  d07d              BEQ      |L7.268|
000010  280f              CMP      r0,#0xf
000012  d006              BEQ      |L7.34|
000014  281d              CMP      r0,#0x1d
000016  d07a              BEQ      |L7.270|
000018  f2a01013          SUB      r0,r0,#0x113
00001c  2800              CMP      r0,#0
00001e  d177              BNE      |L7.272|
000020  e07b              B        |L7.282|
                  |L7.34|
;;;79     	  	
;;;80     		case WM_PAINT: {
;;;81     			
;;;82     			GUI_SetColor(0x00AFEEEE);
000022  487b              LDR      r0,|L7.528|
000024  f7fffffe          BL       GUI_SetColor
;;;83     
;;;84     			GUI_FillRoundedRect(0,0,480,33,5);
000028  2005              MOVS     r0,#5
00002a  2321              MOVS     r3,#0x21
00002c  f44f72f0          MOV      r2,#0x1e0
000030  2100              MOVS     r1,#0
000032  9000              STR      r0,[sp,#0]
000034  4608              MOV      r0,r1
000036  f7fffffe          BL       GUI_FillRoundedRect
;;;85     
;;;86     			GUI_SetColor(GUI_BLACK);
00003a  2000              MOVS     r0,#0
00003c  f7fffffe          BL       GUI_SetColor
;;;87     
;;;88     			GUI_SetFont(&GUI_FontSONGB16);
000040  4874              LDR      r0,|L7.532|
000042  f7fffffe          BL       GUI_SetFont
;;;89     
;;;90     			GUI_UC_SetEncodeUTF8();
000046  f7fffffe          BL       GUI_UC_SetEncodeUTF8
;;;91     
;;;92     			GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
00004a  2002              MOVS     r0,#2
00004c  f7fffffe          BL       GUI_SetTextMode
;;;93     			
;;;94     			winName = ( FLAG_LANG == 1 ) ? "GRAPH" : "曲线图" ; 
000050  4871              LDR      r0,|L7.536|
000052  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
000054  2801              CMP      r0,#1
000056  d101              BNE      |L7.92|
000058  a070              ADR      r0,|L7.540|
00005a  e000              B        |L7.94|
                  |L7.92|
00005c  a071              ADR      r0,|L7.548|
                  |L7.94|
00005e  4680              MOV      r8,r0
;;;95     
;;;96     			GUI_DispStringAt( winName , (480 - GUI_GetStringDistX( winName))/2, 10);//SET
000060  4640              MOV      r0,r8
000062  f7fffffe          BL       GUI_GetStringDistX
000066  f5c079f0          RSB      r9,r0,#0x1e0
00006a  eb0970d9          ADD      r0,r9,r9,LSR #31
00006e  1041              ASRS     r1,r0,#1
000070  220a              MOVS     r2,#0xa
000072  4640              MOV      r0,r8
000074  f7fffffe          BL       GUI_DispStringAt
;;;97     			
;;;98     			for( i = 0; i < sizeof( SGhListG )/sizeof( SGhListG[0]) ; i++  ){
000078  2400              MOVS     r4,#0
00007a  e04b              B        |L7.276|
                  |L7.124|
;;;99     
;;;100    				bush_Graph_String( FLAG_LANG, SGhListG[i] );
00007c  eb0400c4          ADD      r0,r4,r4,LSL #3
000080  4a6b              LDR      r2,|L7.560|
000082  eb0201c0          ADD      r1,r2,r0,LSL #3
000086  2234              MOVS     r2,#0x34
000088  a80f              ADD      r0,sp,#0x3c
00008a  f7fffffe          BL       __aeabi_memcpy4
00008e  eb0400c4          ADD      r0,r4,r4,LSL #3
000092  4967              LDR      r1,|L7.560|
000094  eb0100c0          ADD      r0,r1,r0,LSL #3
000098  6b40              LDR      r0,[r0,#0x34]
00009a  901c              STR      r0,[sp,#0x70]
00009c  eb0400c4          ADD      r0,r4,r4,LSL #3
0000a0  eb0100c0          ADD      r0,r1,r0,LSL #3
0000a4  6b80              LDR      r0,[r0,#0x38]
0000a6  901d              STR      r0,[sp,#0x74]
0000a8  eb0400c4          ADD      r0,r4,r4,LSL #3
0000ac  eb0100c0          ADD      r0,r1,r0,LSL #3
0000b0  6bc0              LDR      r0,[r0,#0x3c]
0000b2  901e              STR      r0,[sp,#0x78]
0000b4  eb0400c4          ADD      r0,r4,r4,LSL #3
0000b8  eb0100c0          ADD      r0,r1,r0,LSL #3
0000bc  f8b00040          LDRH     r0,[r0,#0x40]
0000c0  f8ad007c          STRH     r0,[sp,#0x7c]
0000c4  eb0400c4          ADD      r0,r4,r4,LSL #3
0000c8  eb0100c0          ADD      r0,r1,r0,LSL #3
0000cc  f8b00042          LDRH     r0,[r0,#0x42]
0000d0  f8ad007e          STRH     r0,[sp,#0x7e]
0000d4  eb0400c4          ADD      r0,r4,r4,LSL #3
0000d8  eb0100c0          ADD      r0,r1,r0,LSL #3
0000dc  f8b00044          LDRH     r0,[r0,#0x44]
0000e0  f8ad0080          STRH     r0,[sp,#0x80]
0000e4  eb0400c4          ADD      r0,r4,r4,LSL #3
0000e8  eb0100c0          ADD      r0,r1,r0,LSL #3
0000ec  f8b00046          LDRH     r0,[r0,#0x46]
0000f0  f8ad0082          STRH     r0,[sp,#0x82]
0000f4  223c              MOVS     r2,#0x3c
0000f6  a912              ADD      r1,sp,#0x48
0000f8  4668              MOV      r0,sp
0000fa  f7fffffe          BL       __aeabi_memcpy4
0000fe  4846              LDR      r0,|L7.536|
000100  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
000102  a90f              ADD      r1,sp,#0x3c
000104  c90e              LDM      r1,{r1-r3}
000106  f7fffffe          BL       bush_Graph_String
00010a  e002              B        |L7.274|
                  |L7.268|
00010c  e010              B        |L7.304|
                  |L7.270|
00010e  e010              B        |L7.306|
                  |L7.272|
000110  e076              B        |L7.512|
                  |L7.274|
000112  1c64              ADDS     r4,r4,#1              ;98
                  |L7.276|
000114  2c04              CMP      r4,#4                 ;98
000116  d3b1              BCC      |L7.124|
;;;101    			}
;;;102    			
;;;103    		}
;;;104    		break;
000118  e076              B        |L7.520|
                  |L7.282|
;;;105    
;;;106    		case WM_TIMER:{
;;;107    			if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTimeGH){	
00011a  68e8              LDR      r0,[r5,#0xc]
00011c  f7fffffe          BL       WM_GetTimerId
000120  2805              CMP      r0,#5
000122  d104              BNE      |L7.302|
;;;108    				
;;;109    				//GRAPH_DATA_YT_AddValue(VData,DISS_Voltage*10);
;;;110    				//GRAPH_DATA_YT_AddValue(IData,DISS_Current*10);
;;;111    				
;;;112    				WM_RestartTimer(pMsg->Data.v, 500);//复位定时器数值越大刷新时间越短
000124  f44f71fa          MOV      r1,#0x1f4
000128  68e8              LDR      r0,[r5,#0xc]
00012a  f7fffffe          BL       WM_RestartTimer
                  |L7.302|
;;;113    						
;;;114    			}	
;;;115    			break;
00012e  e06b              B        |L7.520|
                  |L7.304|
;;;116    		}
;;;117    		break;	
;;;118    		
;;;119    		case WM_KEY:
;;;120    		
;;;121    		
;;;122    			
;;;123    			break;
000130  e06a              B        |L7.520|
                  |L7.306|
;;;124    			
;;;125    		case WM_INIT_DIALOG:{
;;;126    				
;;;127    			hItem = pMsg->hWin;
000132  686e              LDR      r6,[r5,#4]
;;;128    			
;;;129    			WINDOW_SetBkColor(hItem, 0x004A4655);
000134  493f              LDR      r1,|L7.564|
000136  4630              MOV      r0,r6
000138  f7fffffe          BL       WINDOW_SetBkColor
;;;130    
;;;131    			WM_CreateTimer( hItem ,ID_TimerTimeGH , 20 , 0);//创建本窗口定时器
00013c  2300              MOVS     r3,#0
00013e  2214              MOVS     r2,#0x14
000140  2105              MOVS     r1,#5
000142  4630              MOV      r0,r6
000144  f7fffffe          BL       WM_CreateTimer
;;;132    			
;;;133    			MAX_LEN = sizeof( slistG )/sizeof( slistG[0] );
000148  2705              MOVS     r7,#5
;;;134    
;;;135    			bush_WinObj( FLAG_LANG, pMsg ,slistG, MAX_LEN);
00014a  463b              MOV      r3,r7
00014c  4a3a              LDR      r2,|L7.568|
00014e  4629              MOV      r1,r5
000150  4831              LDR      r0,|L7.536|
000152  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
000154  f7fffffe          BL       bush_WinObj
;;;136    
;;;137    			hItem = WM_GetDialogItem(pMsg->hWin, ID_GRAPH_0);
000158  f6400192          MOV      r1,#0x892
00015c  6868              LDR      r0,[r5,#4]
00015e  f7fffffe          BL       WM_GetDialogItem
000162  4606              MOV      r6,r0
;;;138    
;;;139    			GRAPH_SetBorder(hItem,23, 5, 5, 10);  //设置边框的尺寸
000164  200a              MOVS     r0,#0xa
000166  2305              MOVS     r3,#5
000168  461a              MOV      r2,r3
00016a  2117              MOVS     r1,#0x17
00016c  9000              STR      r0,[sp,#0]
00016e  4630              MOV      r0,r6
000170  f7fffffe          BL       GRAPH_SetBorder
;;;140    			
;;;141    			hScaleV = GRAPH_SCALE_Create(20, GUI_TA_RIGHT, GRAPH_SCALE_CF_VERTICAL, 20);
000174  2314              MOVS     r3,#0x14
000176  2201              MOVS     r2,#1
000178  4611              MOV      r1,r2
00017a  4618              MOV      r0,r3
00017c  f7fffffe          BL       GRAPH_SCALE_Create
000180  4683              MOV      r11,r0
;;;142    			
;;;143    			//设置标签字体颜色
;;;144    			GRAPH_SCALE_SetTextColor(hScaleV,GUI_RED);
000182  21ff              MOVS     r1,#0xff
000184  4658              MOV      r0,r11
000186  f7fffffe          BL       GRAPH_SCALE_SetTextColor
;;;145    				
;;;146    			//将标签添加到垂直方向
;;;147    			GRAPH_AttachScale( hItem, hScaleV); 
00018a  4659              MOV      r1,r11
00018c  4630              MOV      r0,r6
00018e  f7fffffe          BL       GRAPH_AttachScale
;;;148    			
;;;149    			//创建和增加水平范围尺度标
;;;150    			hScaleH = GRAPH_SCALE_Create(173, GUI_TA_HCENTER , GRAPH_SCALE_CF_HORIZONTAL, 50);
000192  2332              MOVS     r3,#0x32
000194  2200              MOVS     r2,#0
000196  2102              MOVS     r1,#2
000198  20ad              MOVS     r0,#0xad
00019a  f7fffffe          BL       GRAPH_SCALE_Create
00019e  4682              MOV      r10,r0
;;;151    			
;;;152    			GRAPH_SetGridDistY(hItem,20);
0001a0  2114              MOVS     r1,#0x14
0001a2  4630              MOV      r0,r6
0001a4  f7fffffe          BL       GRAPH_SetGridDistY
;;;153    			//GRAPH_SetGridFixedX(hItem,25);
;;;154    
;;;155    			//设置字体颜色
;;;156    			GRAPH_SCALE_SetTextColor( hScaleH,GUI_DARKGREEN); 
0001a8  f44f4100          MOV      r1,#0x8000
0001ac  4650              MOV      r0,r10
0001ae  f7fffffe          BL       GRAPH_SCALE_SetTextColor
;;;157    
;;;158    			GRAPH_SCALE_SetFactor(hScaleV, 0.1);
0001b2  ed9f0a22          VLDR     s0,|L7.572|
0001b6  4658              MOV      r0,r11
0001b8  f7fffffe          BL       GRAPH_SCALE_SetFactor
;;;159    			//添加到水平方向
;;;160    			GRAPH_AttachScale( hItem, hScaleH );
0001bc  4651              MOV      r1,r10
0001be  4630              MOV      r0,r6
0001c0  f7fffffe          BL       GRAPH_AttachScale
;;;161    			
;;;162    			VData = GRAPH_DATA_YT_Create(GUI_GREEN, 500, 0, 0);//
0001c4  2300              MOVS     r3,#0
0001c6  461a              MOV      r2,r3
0001c8  f44f71fa          MOV      r1,#0x1f4
0001cc  f44f407f          MOV      r0,#0xff00
0001d0  f7fffffe          BL       GRAPH_DATA_YT_Create
0001d4  9021              STR      r0,[sp,#0x84]
;;;163    
;;;164    			IData = GRAPH_DATA_YT_Create(GUI_RED, 500, 0, 0);
0001d6  2300              MOVS     r3,#0
0001d8  461a              MOV      r2,r3
0001da  f44f71fa          MOV      r1,#0x1f4
0001de  20ff              MOVS     r0,#0xff
0001e0  f7fffffe          BL       GRAPH_DATA_YT_Create
0001e4  9022              STR      r0,[sp,#0x88]
;;;165    
;;;166    			GRAPH_AttachData(hItem,VData);
0001e6  4630              MOV      r0,r6
0001e8  9921              LDR      r1,[sp,#0x84]
0001ea  f7fffffe          BL       GRAPH_AttachData
;;;167    
;;;168    			GRAPH_AttachData(hItem,IData);	//为绘图控件添加数据对象	
0001ee  4630              MOV      r0,r6
0001f0  9922              LDR      r1,[sp,#0x88]
0001f2  f7fffffe          BL       GRAPH_AttachData
;;;169    
;;;170    			GRAPH_SetGridVis(hItem,1);    //启用网格绘制  1/0
0001f6  2101              MOVS     r1,#1
0001f8  4630              MOV      r0,r6
0001fa  f7fffffe          BL       GRAPH_SetGridVis
;;;171    		}
;;;172    		break;
0001fe  e003              B        |L7.520|
                  |L7.512|
;;;173        default:
;;;174    
;;;175    			WM_DefaultProc(pMsg);
000200  4628              MOV      r0,r5
000202  f7fffffe          BL       WM_DefaultProc
;;;176    		break;
000206  bf00              NOP      
                  |L7.520|
000208  bf00              NOP                            ;104
;;;177    	 }
;;;178    }
00020a  b023              ADD      sp,sp,#0x8c
00020c  e8bd8ff0          POP      {r4-r11,pc}
;;;179    
                          ENDP

                  |L7.528|
                          DCD      0x00afeeee
                  |L7.532|
                          DCD      GUI_FontSONGB16
                  |L7.536|
                          DCD      FLAG_LANG
                  |L7.540|
00021c  47524150          DCB      "GRAPH",0
000220  4800    
000222  00                DCB      0
000223  00                DCB      0
                  |L7.548|
000224  e69bb2e7          DCB      230,155,178,231,186,191,229,155,190,0
000228  babfe59b
00022c  be00    
00022e  00                DCB      0
00022f  00                DCB      0
                  |L7.560|
                          DCD      SGhListG
                  |L7.564|
                          DCD      0x004a4655
                  |L7.568|
                          DCD      slistG
                  |L7.572|
00023c  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreateGraph
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08800000          DCW      0x0880,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  088b0055          DCW      0x088b,0x0055
000028  00e80046          DCW      0x00e8,0x0046
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  088c00a4          DCW      0x088c,0x00a4
000044  00e80046          DCW      0x00e8,0x0046
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  088d00f3          DCW      0x088d,0x00f3
000060  00e80046          DCW      0x00e8,0x0046
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  088e0142          DCW      0x088e,0x0142
00007c  00e80046          DCW      0x00e8,0x0046
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  088f0191          DCW      0x088f,0x0191
000098  00e80046          DCW      0x00e8,0x0046
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      GRAPH_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  08920064          DCW      0x0892,0x0064
0000b4  0024016d          DCW      0x0024,0x016d
0000b8  00b40000          DCW      0x00b4,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  47726170          DCB      "Graph",0
000014  6800    

                          AREA ||.data||, DATA, ALIGN=2

                  GhWin
                          DCD      0x00000000
                  SGhListG
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000002
000010  56285629          DCB      0x56,0x28,0x56,0x29
000014  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
000024  56285629          DCB      0x56,0x28,0x56,0x29
000028  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      GUI_FontSONGB16
000044  000a0037          DCW      0x000a,0x0037
000048  00000000          DCW      0x0000,0x0000
                          DCD      0x00000002
                          DCD      0x00000000
                          DCD      0x00000004
000058  00000000          DCB      0x00,0x00,0x00,0x00
                          %        16
00006c  00000000          DCB      0x00,0x00,0x00,0x00
                          %        16
                          DCD      0x0000ff7f
                          DCD      0x0000ff7f
                          DCD      0x00000000
00008c  0032003e          DCW      0x0032,0x003e
000090  00460040          DCW      0x0046,0x0040
                          DCD      0x00000003
                          DCD      0x00000000
                          DCD      0x00000002
0000a0  49284129          DCB      0x49,0x28,0x41,0x29
0000a4  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
0000b4  49284129          DCB      0x49,0x28,0x41,0x29
0000b8  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      GUI_FontSONGB16
0000d4  000a0055          DCW      0x000a,0x0055
0000d8  00000000          DCW      0x0000,0x0000
                          DCD      0x00000004
                          DCD      0x00000000
                          DCD      0x00000004
0000e8  00000000          DCB      0x00,0x00,0x00,0x00
                          %        16
0000fc  00000000          DCB      0x00,0x00,0x00,0x00
                          %        16
                          DCD      0x0000a5ff
                          DCD      0x0000a5ff
                          DCD      0x00000000
00011c  0032005c          DCW      0x0032,0x005c
000120  0046005e          DCW      0x0046,0x005e
                  slistG
000124  00e58685          DCB      0x00,0xe5,0x86,0x85
000128  e998bbe6          DCB      0xe9,0x98,0xbb,0xe6
00012c  b58be8af          DCB      0xb5,0x8b,0xe8,0xaf
000130  95000000          DCB      0x95,0x00,0x00,0x00
                          DCD      0x00000000
000138  00492e52          DCB      0x00,0x49,0x2e,0x52
00013c  2e205445          DCB      0x2e,0x20,0x54,0x45
000140  53540000          DCB      0x53,0x54,0x00,0x00
                          %        8
00014c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x0000088b
00015c  00e7a88b          DCB      0x00,0xe7,0xa8,0x8b
000160  e68ea7e7          DCB      0xe6,0x8e,0xa7,0xe7
000164  94b5e6ba          DCB      0x94,0xb5,0xe6,0xba
000168  90000000          DCB      0x90,0x00,0x00,0x00
                          DCD      0x00000000
000170  00504f57          DCB      0x00,0x50,0x4f,0x57
000174  45520000          DCB      0x45,0x52,0x00,0x00
                          %        12
000184  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x0000088c
000194  00e7a88b          DCB      0x00,0xe7,0xa8,0x8b
000198  e68ea7e8          DCB      0xe6,0x8e,0xa7,0xe8
00019c  b49fe8bd          DCB      0xb4,0x9f,0xe8,0xbd
0001a0  bd000000          DCB      0xbd,0x00,0x00,0x00
                          DCD      0x00000000
0001a8  004c4f41          DCB      0x00,0x4c,0x4f,0x41
0001ac  44000000          DCB      0x44,0x00,0x00,0x00
                          %        12
0001bc  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x0000088d
0001cc  00e58585          DCB      0x00,0xe5,0x85,0x85
0001d0  e694bee7          DCB      0xe6,0x94,0xbe,0xe7
0001d4  94b50000          DCB      0x94,0xb5,0x00,0x00
                          %        8
0001e0  00432644          DCB      0x00,0x43,0x26,0x44
0001e4  43000000          DCB      0x43,0x00,0x00,0x00
                          %        12
0001f4  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x0000088e
000204  00e7b3bb          DCB      0x00,0xe7,0xb3,0xbb
000208  e7bb9fe8          DCB      0xe7,0xbb,0x9f,0xe8
00020c  aebee7bd          DCB      0xae,0xbe,0xe7,0xbd
000210  ae000000          DCB      0xae,0x00,0x00,0x00
                          DCD      0x00000000
000218  00535953          DCB      0x00,0x53,0x59,0x53
00021c  54454d00          DCB      0x54,0x45,0x4d,0x00
                          %        12
00022c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x0000088f

;*** Start embedded assembler ***

#line 1 "..\\APP\\graph_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_graph_Face_c_08090b2c____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_graph_Face_c_08090b2c____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_graph_Face_c_08090b2c____REVSH|
#line 144
|__asm___12_graph_Face_c_08090b2c____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
