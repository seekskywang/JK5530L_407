; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\stm32f4xx_crc.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\stm32f4xx_crc.d --cpu=Cortex-M4.fp.sp --apcs=interwork --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=537 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\stm32f4xx_crc.crf --no_multibyte_chars ..\Libraries\FWlib\src\stm32f4xx_crc.c]
                          THUMB

                          AREA ||i.CRC_CalcBlockCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcBlockCRC PROC
;;;79       */
;;;80     uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
000000  b510              PUSH     {r4,lr}
;;;81     {
;;;82       uint32_t index = 0;
000002  2200              MOVS     r2,#0
;;;83       
;;;84       for(index = 0; index < BufferLength; index++)
;;;85       {
;;;86         CRC->DR = pBuffer[index];
000004  4b04              LDR      r3,|L1.24|
000006  e003              B        |L1.16|
                  |L1.8|
000008  f8504022          LDR      r4,[r0,r2,LSL #2]
00000c  601c              STR      r4,[r3,#0]
00000e  1c52              ADDS     r2,r2,#1
                  |L1.16|
000010  428a              CMP      r2,r1                 ;84
000012  d3f9              BCC      |L1.8|
;;;87       }
;;;88       return (CRC->DR);
000014  6818              LDR      r0,[r3,#0]
;;;89     }
000016  bd10              POP      {r4,pc}
;;;90     
                          ENDP

                  |L1.24|
                          DCD      0x40023000

                          AREA ||i.CRC_CalcCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcCRC PROC
;;;66       */
;;;67     uint32_t CRC_CalcCRC(uint32_t Data)
000000  4901              LDR      r1,|L2.8|
;;;68     {
;;;69       CRC->DR = Data;
000002  6008              STR      r0,[r1,#0]
;;;70       
;;;71       return (CRC->DR);
000004  6808              LDR      r0,[r1,#0]
;;;72     }
000006  4770              BX       lr
;;;73     
                          ENDP

                  |L2.8|
                          DCD      0x40023000

                          AREA ||i.CRC_GetCRC||, CODE, READONLY, ALIGN=2

                  CRC_GetCRC PROC
;;;95       */
;;;96     uint32_t CRC_GetCRC(void)
000000  4801              LDR      r0,|L3.8|
;;;97     {
;;;98       return (CRC->DR);
000002  6800              LDR      r0,[r0,#0]
;;;99     }
000004  4770              BX       lr
;;;100    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x40023000

                          AREA ||i.CRC_GetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_GetIDRegister PROC
;;;115      */
;;;116    uint8_t CRC_GetIDRegister(void)
000000  4801              LDR      r0,|L4.8|
;;;117    {
;;;118      return (CRC->IDR);
000002  7900              LDRB     r0,[r0,#4]
;;;119    }
000004  4770              BX       lr
;;;120    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40023000

                          AREA ||i.CRC_ResetDR||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;55       */
;;;56     void CRC_ResetDR(void)
000000  4901              LDR      r1,|L5.8|
;;;57     {
;;;58       /* Reset CRC generator */
;;;59       CRC->CR = CRC_CR_RESET;
000002  2001              MOVS     r0,#1
000004  6088              STR      r0,[r1,#8]
;;;60     }
000006  4770              BX       lr
;;;61     
                          ENDP

                  |L5.8|
                          DCD      0x40023000

                          AREA ||i.CRC_SetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_SetIDRegister PROC
;;;105      */
;;;106    void CRC_SetIDRegister(uint8_t IDValue)
000000  4901              LDR      r1,|L6.8|
;;;107    {
;;;108      CRC->IDR = IDValue;
000002  7108              STRB     r0,[r1,#4]
;;;109    }
000004  4770              BX       lr
;;;110    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40023000

;*** Start embedded assembler ***

#line 1 "..\\Libraries\\FWlib\\src\\stm32f4xx_crc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f4xx_crc_c_eea4c7d3____REV16|
#line 129 "E:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_stm32f4xx_crc_c_eea4c7d3____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f4xx_crc_c_eea4c7d3____REVSH|
#line 144
|__asm___15_stm32f4xx_crc_c_eea4c7d3____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
