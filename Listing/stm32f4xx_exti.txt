; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\stm32f4xx_exti.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\stm32f4xx_exti.d --cpu=Cortex-M4.fp.sp --apcs=interwork --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=537 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\stm32f4xx_exti.crf --no_multibyte_chars ..\Libraries\FWlib\src\stm32f4xx_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;248      */
;;;249    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;250    {
;;;251      /* Check the parameters */
;;;252      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;253      
;;;254      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;255    }
000004  4770              BX       lr
;;;256    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;286      */
;;;287    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;288    {
;;;289      /* Check the parameters */
;;;290      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;291      
;;;292      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;293    }
000004  4770              BX       lr
;;;294    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;108      */
;;;109    void EXTI_DeInit(void)
000000  4906              LDR      r1,|L3.28|
;;;110    {
;;;111      EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;112      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;113      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;114      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;115      EXTI->PR = 0x007FFFFF;
000012  4902              LDR      r1,|L3.28|
000014  4802              LDR      r0,|L3.32|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;116    }
00001a  4770              BX       lr
;;;117    
                          ENDP

                  |L3.28|
                          DCD      0x40013c00
                  |L3.32|
                          DCD      0x007fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;195      */
;;;196    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;197    {
;;;198      /* Check the parameters */
;;;199      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;200      
;;;201      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;202    }
000008  4770              BX       lr
;;;203    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0x40013c10

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;225      */
;;;226    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L5.16|
;;;227    {
000002  4601              MOV      r1,r0
;;;228      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;229      /* Check the parameters */
;;;230      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;231      
;;;232      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L5.14|
;;;233      {
;;;234        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;235      }
;;;236      else
;;;237      {
;;;238        bitstatus = RESET;
;;;239      }
;;;240      return bitstatus;
;;;241    }
00000e  4770              BX       lr
;;;242    
                          ENDP

                  |L5.16|
                          DCD      0x40013c14

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;262      */
;;;263    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L6.16|
;;;264    {
000002  4601              MOV      r1,r0
;;;265      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;266      /* Check the parameters */
;;;267      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;268      
;;;269      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L6.14|
;;;270      {
;;;271        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L6.14|
;;;272      }
;;;273      else
;;;274      {
;;;275        bitstatus = RESET;
;;;276      }
;;;277      return bitstatus;
;;;278      
;;;279    }
00000e  4770              BX       lr
;;;280    
                          ENDP

                  |L6.16|
                          DCD      0x40013c14

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;124      */
;;;125    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;126    {
;;;127      uint32_t tmp = 0;
;;;128    
;;;129      /* Check the parameters */
;;;130      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;131      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;132      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;133      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;134    
;;;135      tmp = (uint32_t)EXTI_BASE;
000002  4a1a              LDR      r2,|L7.108|
;;;136         
;;;137      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7983              LDRB     r3,[r0,#6]
000006  6801              LDR      r1,[r0,#0]            ;126
000008  b353              CBZ      r3,|L7.96|
;;;138      {
;;;139        /* Clear EXTI line configuration */
;;;140        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  6813              LDR      r3,[r2,#0]
00000c  438b              BICS     r3,r3,r1
00000e  6013              STR      r3,[r2,#0]
;;;141        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000010  1d11              ADDS     r1,r2,#4
000012  680b              LDR      r3,[r1,#0]
000014  6804              LDR      r4,[r0,#0]
000016  43a3              BICS     r3,r3,r4
000018  600b              STR      r3,[r1,#0]
;;;142        
;;;143        tmp += EXTI_InitStruct->EXTI_Mode;
00001a  7901              LDRB     r1,[r0,#4]
00001c  4411              ADD      r1,r1,r2
;;;144    
;;;145        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00001e  680b              LDR      r3,[r1,#0]
000020  6804              LDR      r4,[r0,#0]
000022  4323              ORRS     r3,r3,r4
000024  600b              STR      r3,[r1,#0]
;;;146    
;;;147        /* Clear Rising Falling edge configuration */
;;;148        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000026  4b11              LDR      r3,|L7.108|
000028  3308              ADDS     r3,r3,#8
00002a  6819              LDR      r1,[r3,#0]
00002c  6804              LDR      r4,[r0,#0]
00002e  43a1              BICS     r1,r1,r4
000030  6019              STR      r1,[r3,#0]
;;;149        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000032  1d1c              ADDS     r4,r3,#4
000034  6821              LDR      r1,[r4,#0]
000036  6805              LDR      r5,[r0,#0]
000038  43a9              BICS     r1,r1,r5
00003a  6021              STR      r1,[r4,#0]
;;;150        
;;;151        /* Select the trigger for the selected external interrupts */
;;;152        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00003c  7941              LDRB     r1,[r0,#5]
00003e  2910              CMP      r1,#0x10
000040  d005              BEQ      |L7.78|
;;;153        {
;;;154          /* Rising Falling edge */
;;;155          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;156          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;157        }
;;;158        else
;;;159        {
;;;160          tmp = (uint32_t)EXTI_BASE;
;;;161          tmp += EXTI_InitStruct->EXTI_Trigger;
000042  4411              ADD      r1,r1,r2
;;;162    
;;;163          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000044  680a              LDR      r2,[r1,#0]
000046  6800              LDR      r0,[r0,#0]
000048  4302              ORRS     r2,r2,r0
00004a  600a              STR      r2,[r1,#0]
;;;164        }
;;;165      }
;;;166      else
;;;167      {
;;;168        tmp += EXTI_InitStruct->EXTI_Mode;
;;;169    
;;;170        /* Disable the selected external lines */
;;;171        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;172      }
;;;173    }
00004c  bd30              POP      {r4,r5,pc}
                  |L7.78|
00004e  6819              LDR      r1,[r3,#0]            ;155
000050  6802              LDR      r2,[r0,#0]            ;155
000052  4311              ORRS     r1,r1,r2              ;155
000054  6019              STR      r1,[r3,#0]            ;155
000056  6821              LDR      r1,[r4,#0]            ;156
000058  6800              LDR      r0,[r0,#0]            ;156
00005a  4301              ORRS     r1,r1,r0              ;156
00005c  6021              STR      r1,[r4,#0]            ;156
00005e  bd30              POP      {r4,r5,pc}
                  |L7.96|
000060  7900              LDRB     r0,[r0,#4]            ;168
000062  4410              ADD      r0,r0,r2              ;168
000064  6802              LDR      r2,[r0,#0]            ;171
000066  438a              BICS     r2,r2,r1              ;171
000068  6002              STR      r2,[r0,#0]            ;171
00006a  bd30              POP      {r4,r5,pc}
;;;174    
                          ENDP

                  |L7.108|
                          DCD      0x40013c00

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;180      */
;;;181    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;182    {
;;;183      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;184      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;185      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;186      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;187    }
00000c  4770              BX       lr
;;;188    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\Libraries\\FWlib\\src\\stm32f4xx_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 129 "E:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 144
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
