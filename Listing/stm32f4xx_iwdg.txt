; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\stm32f4xx_iwdg.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\stm32f4xx_iwdg.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\stm32f4xx_iwdg.crf --no_multibyte_chars ..\Libraries\FWlib\src\stm32f4xx_iwdg.c]
                          THUMB

                          AREA ||i.IWDG_Enable||, CODE, READONLY, ALIGN=2

                  IWDG_Enable PROC
;;;203      */
;;;204    void IWDG_Enable(void)
000000  4902              LDR      r1,|L1.12|
;;;205    {
;;;206      IWDG->KR = KR_KEY_ENABLE;
000002  f64c40cc          MOV      r0,#0xcccc
000006  6008              STR      r0,[r1,#0]
;;;207    }
000008  4770              BX       lr
;;;208    
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  IWDG_GetFlagStatus PROC
;;;232      */
;;;233    FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
000000  4a03              LDR      r2,|L2.16|
;;;234    {
000002  4601              MOV      r1,r0
;;;235      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;236      /* Check the parameters */
;;;237      assert_param(IS_IWDG_FLAG(IWDG_FLAG));
;;;238      if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
000006  68d2              LDR      r2,[r2,#0xc]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L2.14|
;;;239      {
;;;240        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L2.14|
;;;241      }
;;;242      else
;;;243      {
;;;244        bitstatus = RESET;
;;;245      }
;;;246      /* Return the flag status */
;;;247      return bitstatus;
;;;248    }
00000e  4770              BX       lr
;;;249    
                          ENDP

                  |L2.16|
                          DCD      0x40003000

                          AREA ||i.IWDG_ReloadCounter||, CODE, READONLY, ALIGN=2

                  IWDG_ReloadCounter PROC
;;;177      */
;;;178    void IWDG_ReloadCounter(void)
000000  4902              LDR      r1,|L3.12|
;;;179    {
;;;180      IWDG->KR = KR_KEY_RELOAD;
000002  f64a20aa          MOV      r0,#0xaaaa
000006  6008              STR      r0,[r1,#0]
;;;181    }
000008  4770              BX       lr
;;;182    
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetPrescaler||, CODE, READONLY, ALIGN=2

                  IWDG_SetPrescaler PROC
;;;151      */
;;;152    void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
000000  4901              LDR      r1,|L4.8|
;;;153    {
;;;154      /* Check the parameters */
;;;155      assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
;;;156      IWDG->PR = IWDG_Prescaler;
000002  6048              STR      r0,[r1,#4]
;;;157    }
000004  4770              BX       lr
;;;158    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetReload||, CODE, READONLY, ALIGN=2

                  IWDG_SetReload PROC
;;;164      */
;;;165    void IWDG_SetReload(uint16_t Reload)
000000  4901              LDR      r1,|L5.8|
;;;166    {
;;;167      /* Check the parameters */
;;;168      assert_param(IS_IWDG_RELOAD(Reload));
;;;169      IWDG->RLR = Reload;
000002  6088              STR      r0,[r1,#8]
;;;170    }
000004  4770              BX       lr
;;;171    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      0x40003000

                          AREA ||i.IWDG_WriteAccessCmd||, CODE, READONLY, ALIGN=2

                  IWDG_WriteAccessCmd PROC
;;;131      */
;;;132    void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
000000  4901              LDR      r1,|L6.8|
;;;133    {
;;;134      /* Check the parameters */
;;;135      assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
;;;136      IWDG->KR = IWDG_WriteAccess;
000002  6008              STR      r0,[r1,#0]
;;;137    }
000004  4770              BX       lr
;;;138    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40003000

;*** Start embedded assembler ***

#line 1 "..\\Libraries\\FWlib\\src\\stm32f4xx_iwdg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_iwdg_c_15798b01____REV16|
#line 129 "E:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_iwdg_c_15798b01____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_iwdg_c_15798b01____REVSH|
#line 144
|__asm___16_stm32f4xx_iwdg_c_15798b01____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
