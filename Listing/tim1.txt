; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\tim1.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\tim1.d --cpu=Cortex-M4.fp.sp --apcs=interwork --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=537 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\tim1.crf --no_multibyte_chars ..\drive\TIM1.c]
                          THUMB

                          AREA ||i.TIM1_Config||, CODE, READONLY, ALIGN=2

                  TIM1_Config PROC
;;;12     vu16 PWM_FI;
;;;13     void TIM1_Config(void)
000000  b57c              PUSH     {r2-r6,lr}
;;;14     {
;;;15     	GPIO_InitTypeDef GPIO_InitStructure;;
;;;16     	GPIO_PinAFConfig(GPIOA,GPIO_PinSource7,GPIO_AF_TIM1);
000002  4e13              LDR      r6,|L1.80|
000004  2201              MOVS     r2,#1
000006  2107              MOVS     r1,#7
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       GPIO_PinAFConfig
;;;17     	GPIO_PinAFConfig(GPIOA,GPIO_PinSource8,GPIO_AF_TIM1);
00000e  2201              MOVS     r2,#1
000010  2108              MOVS     r1,#8
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       GPIO_PinAFConfig
;;;18       /* GPIO_INT*/
;;;19       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
;;;20       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000018  2402              MOVS     r4,#2
00001a  2080              MOVS     r0,#0x80              ;19
00001c  f88d4004          STRB     r4,[sp,#4]
;;;21     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
000020  2500              MOVS     r5,#0
000022  9000              STR      r0,[sp,#0]            ;20
000024  f88d5006          STRB     r5,[sp,#6]
;;;22       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000028  f88d4005          STRB     r4,[sp,#5]
;;;23       GPIO_Init(GPIOA, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  4630              MOV      r0,r6
000030  f7fffffe          BL       GPIO_Init
;;;24       
;;;25     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
000034  01e0              LSLS     r0,r4,#7
;;;26       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000036  f88d4004          STRB     r4,[sp,#4]
00003a  9000              STR      r0,[sp,#0]
;;;27     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
00003c  f88d5006          STRB     r5,[sp,#6]
;;;28       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000040  f88d4005          STRB     r4,[sp,#5]
;;;29       GPIO_Init(GPIOA, &GPIO_InitStructure);
000044  4669              MOV      r1,sp
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       GPIO_Init
;;;30     }
00004c  bd7c              POP      {r2-r6,pc}
;;;31     /*****************************************************************/
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
                          DCD      0x40020000

                          AREA ||i.TIM1_PWM_Config||, CODE, READONLY, ALIGN=2

                  TIM1_PWM_Config PROC
;;;31     /*****************************************************************/
;;;32     void TIM1_PWM_Config(void)
000000  b570              PUSH     {r4-r6,lr}
;;;33     {
;;;34     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;35     	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;36     	/* TIM3 的配置 ---------------------------------------------------
;;;37        TIM3 输入时钟(TIM3CLK) 设置为 APB2 时钟 (PCLK2)    
;;;38         => TIM3CLK = PCLK2 = SystemCoreClock
;;;39        TIM3CLK = SystemCoreClock, Prescaler = 0, TIM3 counter clock = SystemCoreClock
;;;40        SystemCoreClock 为48 MHz */
;;;41       /* TIM1 时钟使能 */
;;;42       RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1,ENABLE);
000002  2101              MOVS     r1,#1
000004  b088              SUB      sp,sp,#0x20           ;33
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;43     	TIM1_Config();//TIM1_GPIO初始化
00000c  f7fffffe          BL       TIM1_Config
;;;44     
;;;45       /* Time 定时基础设置*/
;;;46       TIM_TimeBaseStructure.TIM_Prescaler = 4;
000010  2604              MOVS     r6,#4
;;;47       TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  /* Time 定时设置为上升沿计算模式*/
000012  2400              MOVS     r4,#0
;;;48       TIM_TimeBaseStructure.TIM_Period = 0;
;;;49       TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV4;
000014  01f0              LSLS     r0,r6,#7
000016  f8ad001c          STRH     r0,[sp,#0x1c]
;;;50       TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
;;;51     
;;;52       TIM_TimeBaseInit(TIM1,&TIM_TimeBaseStructure);
00001a  4d21              LDR      r5,|L2.160|
00001c  f8ad6014          STRH     r6,[sp,#0x14]         ;46
000020  f8ad4016          STRH     r4,[sp,#0x16]         ;47
000024  9406              STR      r4,[sp,#0x18]         ;49
000026  f88d401e          STRB     r4,[sp,#0x1e]         ;50
00002a  a905              ADD      r1,sp,#0x14
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       TIM_TimeBaseInit
;;;53     
;;;54       /* 频道1的PWM 模式设置 */
;;;55       TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2;
000032  2070              MOVS     r0,#0x70
000034  f8ad0000          STRH     r0,[sp,#0]
;;;56       TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
000038  2001              MOVS     r0,#1
00003a  f8ad0002          STRH     r0,[sp,#2]
;;;57       TIM_OCInitStructure.TIM_OutputNState = TIM_OutputNState_Enable;
;;;58       TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
;;;59       TIM_OCInitStructure.TIM_OCNPolarity = TIM_OCPolarity_High;
;;;60       TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Reset;
;;;61       TIM_OCInitStructure.TIM_OCNIdleState = TIM_OCIdleState_Reset;
;;;62     	TIM_OCInitStructure.TIM_Pulse = 0x5DC0;//使能频道1配置
00003e  f64550c0          MOV      r0,#0x5dc0
000042  f8ad400c          STRH     r4,[sp,#0xc]          ;58
000046  f8ad4010          STRH     r4,[sp,#0x10]         ;60
;;;63     	
;;;64       TIM_OC1Init(TIM1, &TIM_OCInitStructure);
00004a  9002              STR      r0,[sp,#8]
00004c  f8ad6004          STRH     r6,[sp,#4]            ;57
000050  f8ad400e          STRH     r4,[sp,#0xe]          ;59
000054  f8ad4012          STRH     r4,[sp,#0x12]         ;61
000058  4669              MOV      r1,sp
00005a  4628              MOV      r0,r5
00005c  f7fffffe          BL       TIM_OC1Init
;;;65     	PWM_FI=33000;
000060  4c10              LDR      r4,|L2.164|
000062  f24800e8          MOV      r0,#0x80e8
000066  8020              STRH     r0,[r4,#0]
;;;66     	TIM_OC1PreloadConfig(TIM1, TIM_OCPreload_Enable);
000068  2108              MOVS     r1,#8
00006a  4628              MOV      r0,r5
00006c  f7fffffe          BL       TIM_OC1PreloadConfig
;;;67     	TIM_SetAutoreload(TIM1, PWM_FI);//设置PWM分辨率
000070  8821              LDRH     r1,[r4,#0]  ; PWM_FI
000072  4628              MOV      r0,r5
000074  f7fffffe          BL       TIM_SetAutoreload
;;;68     	TIM_ARRPreloadConfig(TIM1, ENABLE);
000078  2101              MOVS     r1,#1
00007a  4628              MOV      r0,r5
00007c  f7fffffe          BL       TIM_ARRPreloadConfig
;;;69       /* TIM1 计算器使能*/
;;;70       TIM_Cmd(TIM1, ENABLE);
000080  2101              MOVS     r1,#1
000082  4628              MOV      r0,r5
000084  f7fffffe          BL       TIM_Cmd
;;;71     	
;;;72       /* TIM1 主输出使能 */
;;;73       TIM_CtrlPWMOutputs(TIM1, ENABLE);	
000088  2101              MOVS     r1,#1
00008a  4628              MOV      r0,r5
00008c  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;74     	TIM_SetCompare1(TIM1,PWM_FI/2);
000090  8820              LDRH     r0,[r4,#0]  ; PWM_FI
000092  0841              LSRS     r1,r0,#1
000094  4628              MOV      r0,r5
000096  f7fffffe          BL       TIM_SetCompare1
;;;75     }
00009a  b008              ADD      sp,sp,#0x20
00009c  bd70              POP      {r4-r6,pc}
                          ENDP

00009e  0000              DCW      0x0000
                  |L2.160|
                          DCD      0x40010000
                  |L2.164|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=1

                  PWM_FI
000000  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\drive\\TIM1.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_TIM1_c_108c9624____REV16|
#line 129 "E:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_TIM1_c_108c9624____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_TIM1_c_108c9624____REVSH|
#line 144
|__asm___6_TIM1_c_108c9624____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
