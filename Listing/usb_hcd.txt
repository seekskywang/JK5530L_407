; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\usb_hcd.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\usb_hcd.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\usb_hcd.crf --no_multibyte_chars ..\USB\STM32_USB_OTG_Driver\src\usb_hcd.c]
                          THUMB

                          AREA ||i.HCD_GetCurrentFrame||, CODE, READONLY, ALIGN=1

                  HCD_GetCurrentFrame PROC
;;;178      */
;;;179    uint32_t HCD_GetCurrentFrame (USB_OTG_CORE_HANDLE *pdev) 
000000  6940              LDR      r0,[r0,#0x14]
;;;180    {
;;;181     return (USB_OTG_READ_REG32(&pdev->regs.HREGS->HFNUM) & 0xFFFF) ;
000002  6880              LDR      r0,[r0,#8]
000004  b280              UXTH     r0,r0
;;;182    }
000006  4770              BX       lr
;;;183    
                          ENDP


                          AREA ||i.HCD_GetCurrentSpeed||, CODE, READONLY, ALIGN=1

                  HCD_GetCurrentSpeed PROC
;;;132    
;;;133    uint32_t HCD_GetCurrentSpeed (USB_OTG_CORE_HANDLE *pdev)
000000  f8d000cc          LDR      r0,[r0,#0xcc]
;;;134    {    
;;;135        USB_OTG_HPRT0_TypeDef  HPRT0;
;;;136        HPRT0.d32 = USB_OTG_READ_REG32(pdev->regs.HPRT0);
000004  6800              LDR      r0,[r0,#0]
;;;137        
;;;138        return HPRT0.b.prtspd;
000006  f3c04041          UBFX     r0,r0,#17,#2
;;;139    }
00000a  4770              BX       lr
;;;140    
                          ENDP


                          AREA ||i.HCD_GetHCState||, CODE, READONLY, ALIGN=1

                  HCD_GetHCState PROC
;;;216      */
;;;217    HC_STATUS HCD_GetHCState (USB_OTG_CORE_HANDLE *pdev ,  uint8_t ch_num) 
000000  4408              ADD      r0,r0,r1
;;;218    {
;;;219      return pdev->host.HC_Status[ch_num] ;
000002  f890038c          LDRB     r0,[r0,#0x38c]
;;;220    }
000006  4770              BX       lr
;;;221    
                          ENDP


                          AREA ||i.HCD_GetURB_State||, CODE, READONLY, ALIGN=1

                  HCD_GetURB_State PROC
;;;190      */
;;;191    URB_STATE HCD_GetURB_State (USB_OTG_CORE_HANDLE *pdev , uint8_t ch_num) 
000000  4408              ADD      r0,r0,r1
;;;192    {
;;;193      return pdev->host.URB_State[ch_num] ;
000002  f890039b          LDRB     r0,[r0,#0x39b]
;;;194    }
000006  4770              BX       lr
;;;195    
                          ENDP


                          AREA ||i.HCD_GetXferCnt||, CODE, READONLY, ALIGN=1

                  HCD_GetXferCnt PROC
;;;202      */
;;;203    uint32_t HCD_GetXferCnt (USB_OTG_CORE_HANDLE *pdev, uint8_t ch_num) 
000000  eb000081          ADD      r0,r0,r1,LSL #2
;;;204    {
;;;205      return pdev->host.XferCnt[ch_num] ;
000004  f8d00350          LDR      r0,[r0,#0x350]
;;;206    }
000008  4770              BX       lr
;;;207    
                          ENDP


                          AREA ||i.HCD_HC_Init||, CODE, READONLY, ALIGN=1

                  HCD_HC_Init PROC
;;;228      */
;;;229    uint32_t HCD_HC_Init (USB_OTG_CORE_HANDLE *pdev , uint8_t hc_num) 
000000  f7ffbffe          B.W      USB_OTG_HC_Init
;;;230    {
;;;231      return USB_OTG_HC_Init(pdev, hc_num);  
;;;232    }
;;;233    
                          ENDP


                          AREA ||i.HCD_Init||, CODE, READONLY, ALIGN=1

                  HCD_Init PROC
;;;96       */
;;;97     uint32_t HCD_Init(USB_OTG_CORE_HANDLE *pdev , 
000000  b510              PUSH     {r4,lr}
;;;98                       USB_OTG_CORE_ID_TypeDef coreID)
;;;99     {
;;;100      uint8_t i = 0;
000002  2200              MOVS     r2,#0
000004  4604              MOV      r4,r0                 ;99
;;;101      pdev->host.ConnSts = 0;
000006  4613              MOV      r3,r2
000008  f8c02310          STR      r2,[r0,#0x310]
                  |L7.12|
;;;102      
;;;103      for (i= 0; i< USB_OTG_MAX_TX_FIFOS; i++)
;;;104      {
;;;105      pdev->host.ErrCnt[i]  = 0;
00000c  eb040082          ADD      r0,r4,r2,LSL #2
000010  f8c03314          STR      r3,[r0,#0x314]
;;;106      pdev->host.XferCnt[i]   = 0;
000014  f8c03350          STR      r3,[r0,#0x350]
;;;107      pdev->host.HC_Status[i]   = HC_IDLE;
000018  18a0              ADDS     r0,r4,r2
00001a  f880338c          STRB     r3,[r0,#0x38c]
00001e  1c52              ADDS     r2,r2,#1
000020  b2d2              UXTB     r2,r2                 ;103
000022  2a0f              CMP      r2,#0xf               ;103
000024  d3f2              BCC      |L7.12|
;;;108      }
;;;109      pdev->host.hc[0].max_packet  = 8; 
000026  2008              MOVS     r0,#8
000028  f8a403b2          STRH     r0,[r4,#0x3b2]
;;;110    
;;;111      USB_OTG_SelectCore(pdev, coreID);
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       USB_OTG_SelectCore
;;;112    #ifndef DUAL_ROLE_MODE_ENABLED
;;;113      USB_OTG_DisableGlobalInt(pdev);
000032  4620              MOV      r0,r4
000034  f7fffffe          BL       USB_OTG_DisableGlobalInt
;;;114      USB_OTG_CoreInit(pdev);
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       USB_OTG_CoreInit
;;;115    
;;;116      /* Force Host Mode*/
;;;117      USB_OTG_SetCurrentMode(pdev , HOST_MODE);
00003e  2101              MOVS     r1,#1
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       USB_OTG_SetCurrentMode
;;;118      USB_OTG_CoreInitHost(pdev);
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       USB_OTG_CoreInitHost
;;;119      USB_OTG_EnableGlobalInt(pdev);
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       USB_OTG_EnableGlobalInt
;;;120    #endif
;;;121       
;;;122      return 0;
000052  2000              MOVS     r0,#0
;;;123    }
000054  bd10              POP      {r4,pc}
;;;124    
                          ENDP


                          AREA ||i.HCD_IsDeviceConnected||, CODE, READONLY, ALIGN=1

                  HCD_IsDeviceConnected PROC
;;;166      */
;;;167    uint32_t HCD_IsDeviceConnected(USB_OTG_CORE_HANDLE *pdev)
000000  f8d00310          LDR      r0,[r0,#0x310]
;;;168    {
;;;169      return (pdev->host.ConnSts);
;;;170    }
000004  4770              BX       lr
;;;171    
                          ENDP


                          AREA ||i.HCD_ResetPort||, CODE, READONLY, ALIGN=1

                  HCD_ResetPort PROC
;;;146      */
;;;147    uint32_t HCD_ResetPort(USB_OTG_CORE_HANDLE *pdev)
000000  b510              PUSH     {r4,lr}
;;;148    {
;;;149      /*
;;;150      Before starting to drive a USB reset, the application waits for the OTG 
;;;151      interrupt triggered by the debounce done bit (DBCDNE bit in OTG_FS_GOTGINT), 
;;;152      which indicates that the bus is stable again after the electrical debounce 
;;;153      caused by the attachment of a pull-up resistor on DP (FS) or DM (LS).
;;;154      */
;;;155      
;;;156      USB_OTG_ResetPort(pdev); 
000002  f7fffffe          BL       USB_OTG_ResetPort
;;;157      return 0;
000006  2000              MOVS     r0,#0
;;;158    }
000008  bd10              POP      {r4,pc}
;;;159    
                          ENDP


                          AREA ||i.HCD_SubmitRequest||, CODE, READONLY, ALIGN=1

                  HCD_SubmitRequest PROC
;;;240      */
;;;241    uint32_t HCD_SubmitRequest (USB_OTG_CORE_HANDLE *pdev , uint8_t hc_num) 
000000  2200              MOVS     r2,#0
;;;242    {
;;;243      
;;;244      pdev->host.URB_State[hc_num] =   URB_IDLE;  
000002  1843              ADDS     r3,r0,r1
000004  f883239b          STRB     r2,[r3,#0x39b]
;;;245      pdev->host.hc[hc_num].xfer_count = 0 ;
000008  eb001341          ADD      r3,r0,r1,LSL #5
;;;246      return USB_OTG_HC_StartXfer(pdev, hc_num);
00000c  f8c323c0          STR      r2,[r3,#0x3c0]
000010  f7ffbffe          B.W      USB_OTG_HC_StartXfer
;;;247    }
;;;248    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\USB\\STM32_USB_OTG_Driver\\src\\usb_hcd.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_hcd_c_HCD_Init____REV16|
#line 129 "E:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_usb_hcd_c_HCD_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_hcd_c_HCD_Init____REVSH|
#line 144
|__asm___9_usb_hcd_c_HCD_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
