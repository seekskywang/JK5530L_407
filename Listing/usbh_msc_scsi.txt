; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\usbh_msc_scsi.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\usbh_msc_scsi.d --cpu=Cortex-M4.fp.sp --apcs=interwork --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=537 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\usbh_msc_scsi.crf --no_multibyte_chars ..\USB\STM32_USB_HOST_Library\Class\MSC\src\usbh_msc_scsi.c]
                          THUMB

                          AREA ||i.USBH_MSC_ModeSense6||, CODE, READONLY, ALIGN=2

                  USBH_MSC_ModeSense6 PROC
;;;288      */
;;;289    uint8_t USBH_MSC_ModeSense6(USB_OTG_CORE_HANDLE *pdev)
000000  b570              PUSH     {r4-r6,lr}
;;;290    {
;;;291      uint8_t index;
;;;292      USBH_MSC_Status_TypeDef status = USBH_MSC_BUSY;
000002  2403              MOVS     r4,#3
;;;293      
;;;294      if(HCD_IsDeviceConnected(pdev))
000004  f7fffffe          BL       HCD_IsDeviceConnected
000008  b330              CBZ      r0,|L1.88|
;;;295      {  
;;;296        switch(USBH_MSC_BOTXferParam.CmdStateMachine)
00000a  4d21              LDR      r5,|L1.144|
;;;297        {
;;;298        case CMD_SEND_STATE:
;;;299          /*Prepare the CBW and relevent field*/
;;;300          USBH_MSC_CBWData.field.CBWTransferLength = XFER_LEN_MODE_SENSE6;
;;;301          USBH_MSC_CBWData.field.CBWFlags = USB_EP_DIR_IN;
;;;302          USBH_MSC_CBWData.field.CBWLength = CBW_LENGTH;
;;;303          
;;;304          USBH_MSC_BOTXferParam.pRxTxBuff = USBH_DataInBuffer;
00000c  4e21              LDR      r6,|L1.148|
00000e  2200              MOVS     r2,#0
000010  78e8              LDRB     r0,[r5,#3]            ;296  ; USBH_MSC_BOTXferParam
000012  2301              MOVS     r3,#1                 ;296
000014  2801              CMP      r0,#1                 ;296
000016  d002              BEQ      |L1.30|
000018  2802              CMP      r0,#2                 ;296
00001a  d136              BNE      |L1.138|
00001c  e01d              B        |L1.90|
                  |L1.30|
00001e  491e              LDR      r1,|L1.152|
000020  243f              MOVS     r4,#0x3f              ;300
000022  2080              MOVS     r0,#0x80              ;301
000024  608c              STR      r4,[r1,#8]            ;301  ; USBH_MSC_CBWData
000026  7308              STRB     r0,[r1,#0xc]          ;301
000028  200a              MOVS     r0,#0xa               ;302
00002a  7388              STRB     r0,[r1,#0xe]          ;302
;;;305          USBH_MSC_BOTXferParam.MSCStateCurrent = USBH_MSC_MODE_SENSE6;
00002c  2005              MOVS     r0,#5
00002e  60ae              STR      r6,[r5,#8]  ; USBH_MSC_BOTXferParam
000030  70a8              STRB     r0,[r5,#2]
;;;306          
;;;307          for(index = CBW_CB_LENGTH; index != 0; index--)
000032  2010              MOVS     r0,#0x10
                  |L1.52|
;;;308          {
;;;309            USBH_MSC_CBWData.field.CBWCB[index] = 0x00;
000034  180e              ADDS     r6,r1,r0
000036  1e40              SUBS     r0,r0,#1
000038  73f2              STRB     r2,[r6,#0xf]
00003a  f01000ff          ANDS     r0,r0,#0xff           ;307
00003e  d1f9              BNE      |L1.52|
;;;310          }    
;;;311          
;;;312          USBH_MSC_CBWData.field.CBWCB[0]  = OPCODE_MODE_SENSE6; 
000040  201a              MOVS     r0,#0x1a
000042  73c8              STRB     r0,[r1,#0xf]
;;;313          USBH_MSC_CBWData.field.CBWCB[2]  = MODE_SENSE_PAGE_CONTROL_FIELD | \
000044  744c              STRB     r4,[r1,#0x11]
;;;314                                             MODE_SENSE_PAGE_CODE;
;;;315                                               
;;;316          USBH_MSC_CBWData.field.CBWCB[4]  = XFER_LEN_MODE_SENSE6;
000046  74cc              STRB     r4,[r1,#0x13]
;;;317                                                                                          
;;;318          USBH_MSC_BOTXferParam.BOTState = USBH_MSC_SEND_CBW;
000048  712b              STRB     r3,[r5,#4]
;;;319          
;;;320          /* Start the transfer, then let the state machine manage the other 
;;;321                                                                    transactions */
;;;322          USBH_MSC_BOTXferParam.MSCState = USBH_MSC_BOT_USB_TRANSFERS;
00004a  2007              MOVS     r0,#7
00004c  7028              STRB     r0,[r5,#0]
;;;323          USBH_MSC_BOTXferParam.BOTXferStatus = USBH_MSC_BUSY;
00004e  2003              MOVS     r0,#3
000050  73e8              STRB     r0,[r5,#0xf]
;;;324          USBH_MSC_BOTXferParam.CmdStateMachine = CMD_WAIT_STATUS;
000052  2002              MOVS     r0,#2
000054  70e8              STRB     r0,[r5,#3]
;;;325          
;;;326          status = USBH_MSC_BUSY;
000056  2403              MOVS     r4,#3
                  |L1.88|
;;;327          break;
000058  e017              B        |L1.138|
                  |L1.90|
;;;328          
;;;329        case CMD_WAIT_STATUS:
;;;330          if(USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_OK)
00005a  7be8              LDRB     r0,[r5,#0xf]  ; USBH_MSC_BOTXferParam
00005c  b120              CBZ      r0,|L1.104|
;;;331          {
;;;332            /* Assign the Write Protect status */
;;;333            /* If WriteProtect = 0, Writing is allowed 
;;;334               If WriteProtect != 0, Disk is Write Protected */
;;;335            if ( USBH_DataInBuffer[2] & MASK_MODE_SENSE_WRITE_PROTECT)
;;;336            {
;;;337              USBH_MSC_Param.MSWriteProtect   = DISK_WRITE_PROTECTED;
;;;338            }
;;;339            else
;;;340            {
;;;341              USBH_MSC_Param.MSWriteProtect   = 0;
;;;342            }
;;;343            
;;;344            /* Commands successfully sent and Response Received  */       
;;;345            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;346            status = USBH_MSC_OK;      
;;;347          }
;;;348          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_FAIL )
00005e  2801              CMP      r0,#1
000060  d00e              BEQ      |L1.128|
;;;349          {
;;;350            /* Failure Mode */
;;;351            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;352            status = USBH_MSC_FAIL;
;;;353          }
;;;354          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_PHASE_ERROR )
000062  2802              CMP      r0,#2
000064  d00f              BEQ      |L1.134|
000066  e010              B        |L1.138|
                  |L1.104|
000068  78b0              LDRB     r0,[r6,#2]            ;335  ; USBH_DataInBuffer
00006a  0601              LSLS     r1,r0,#24             ;335
00006c  4809              LDR      r0,|L1.148|
00006e  f1a00010          SUB      r0,r0,#0x10           ;337
000072  d501              BPL      |L1.120|
000074  7303              STRB     r3,[r0,#0xc]          ;337
000076  e000              B        |L1.122|
                  |L1.120|
000078  7302              STRB     r2,[r0,#0xc]          ;341
                  |L1.122|
00007a  70eb              STRB     r3,[r5,#3]            ;345
00007c  2400              MOVS     r4,#0                 ;346
00007e  e004              B        |L1.138|
                  |L1.128|
000080  70eb              STRB     r3,[r5,#3]            ;351
000082  2401              MOVS     r4,#1                 ;352
000084  e001              B        |L1.138|
                  |L1.134|
;;;355          {
;;;356            /* Failure Mode */
;;;357            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
000086  70eb              STRB     r3,[r5,#3]
;;;358            status = USBH_MSC_PHASE_ERROR;    
000088  2402              MOVS     r4,#2
                  |L1.138|
;;;359          }
;;;360          else
;;;361          {
;;;362            /* Wait for the Commands to get Completed */
;;;363            /* NO Change in state Machine */
;;;364          }
;;;365          break;
;;;366          
;;;367        default:
;;;368          break;
;;;369        }
;;;370      }
;;;371      return status;
00008a  4620              MOV      r0,r4
;;;372    }
00008c  bd70              POP      {r4-r6,pc}
;;;373    
                          ENDP

00008e  0000              DCW      0x0000
                  |L1.144|
                          DCD      USBH_MSC_BOTXferParam
                  |L1.148|
                          DCD      ||.bss||+0x10
                  |L1.152|
                          DCD      USBH_MSC_CBWData

                          AREA ||i.USBH_MSC_Read10||, CODE, READONLY, ALIGN=2

                  USBH_MSC_Read10 PROC
;;;564      */
;;;565    uint8_t USBH_MSC_Read10(USB_OTG_CORE_HANDLE *pdev,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;566                            uint8_t *dataBuffer,
;;;567                            uint32_t address,
;;;568                            uint32_t nbOfbytes)
;;;569    {
;;;570      uint8_t index;
;;;571      static USBH_MSC_Status_TypeDef status = USBH_MSC_BUSY;
;;;572      uint16_t nbOfPages;
;;;573      status = USBH_MSC_BUSY;
000004  4d31              LDR      r5,|L2.204|
000006  b081              SUB      sp,sp,#4              ;569
000008  f04f0903          MOV      r9,#3
00000c  f8859000          STRB     r9,[r5,#0]
000010  4698              MOV      r8,r3                 ;569
000012  4614              MOV      r4,r2                 ;569
;;;574      
;;;575      if(HCD_IsDeviceConnected(pdev))
000014  9801              LDR      r0,[sp,#4]
000016  f7fffffe          BL       HCD_IsDeviceConnected
00001a  b3c0              CBZ      r0,|L2.142|
;;;576      {
;;;577        switch(USBH_MSC_BOTXferParam.CmdStateMachine)
00001c  4f2c              LDR      r7,|L2.208|
00001e  2601              MOVS     r6,#1
000020  f04f0b02          MOV      r11,#2
000024  78f8              LDRB     r0,[r7,#3]  ; USBH_MSC_BOTXferParam
000026  f04f0a00          MOV      r10,#0
00002a  2801              CMP      r0,#1
00002c  d002              BEQ      |L2.52|
00002e  2802              CMP      r0,#2
000030  d147              BNE      |L2.194|
000032  e02d              B        |L2.144|
                  |L2.52|
;;;578        {
;;;579        case CMD_SEND_STATE:
;;;580          /*Prepare the CBW and relevent field*/
;;;581          USBH_MSC_CBWData.field.CBWTransferLength = nbOfbytes;
000034  4927              LDR      r1,|L2.212|
;;;582          USBH_MSC_CBWData.field.CBWFlags = USB_EP_DIR_IN;
000036  2080              MOVS     r0,#0x80
;;;583          USBH_MSC_CBWData.field.CBWLength = CBW_LENGTH;
;;;584          
;;;585          USBH_MSC_BOTXferParam.pRxTxBuff = dataBuffer;
;;;586          
;;;587          for(index = CBW_CB_LENGTH; index != 0; index--)
000038  4652              MOV      r2,r10
00003a  f8c18008          STR      r8,[r1,#8]            ;582  ; USBH_MSC_CBWData
00003e  7308              STRB     r0,[r1,#0xc]          ;582
000040  200a              MOVS     r0,#0xa               ;583
000042  7388              STRB     r0,[r1,#0xe]          ;583
000044  9802              LDR      r0,[sp,#8]            ;585
000046  60b8              STR      r0,[r7,#8]  ; USBH_MSC_BOTXferParam
000048  2010              MOVS     r0,#0x10
                  |L2.74|
;;;588          {
;;;589            USBH_MSC_CBWData.field.CBWCB[index] = 0x00;
00004a  180b              ADDS     r3,r1,r0
00004c  1e40              SUBS     r0,r0,#1
00004e  73da              STRB     r2,[r3,#0xf]
000050  f01000ff          ANDS     r0,r0,#0xff           ;587
000054  d1f9              BNE      |L2.74|
;;;590          }
;;;591          
;;;592          USBH_MSC_CBWData.field.CBWCB[0]  = OPCODE_READ10; 
000056  2028              MOVS     r0,#0x28
000058  73c8              STRB     r0,[r1,#0xf]
00005a  0e20              LSRS     r0,r4,#24
;;;593          
;;;594          /*logical block address*/
;;;595          
;;;596          USBH_MSC_CBWData.field.CBWCB[2]  = (((uint8_t*)&address)[3]);
00005c  7448              STRB     r0,[r1,#0x11]
00005e  0c20              LSRS     r0,r4,#16
;;;597          USBH_MSC_CBWData.field.CBWCB[3]  = (((uint8_t*)&address)[2]);
000060  7488              STRB     r0,[r1,#0x12]
000062  0a20              LSRS     r0,r4,#8
;;;598          USBH_MSC_CBWData.field.CBWCB[4]  = (((uint8_t*)&address)[1]);
000064  74c8              STRB     r0,[r1,#0x13]
;;;599          USBH_MSC_CBWData.field.CBWCB[5]  = (((uint8_t*)&address)[0]);
000066  750c              STRB     r4,[r1,#0x14]
;;;600          
;;;601          /*USBH_MSC_PAGE_LENGTH = 512*/
;;;602          nbOfPages = nbOfbytes/ USBH_MSC_PAGE_LENGTH;  
000068  ea4f2058          LSR      r0,r8,#9
00006c  f8ad0000          STRH     r0,[sp,#0]
;;;603          
;;;604          /*Tranfer length */
;;;605          USBH_MSC_CBWData.field.CBWCB[7]  = (((uint8_t *)&nbOfPages)[1]) ; 
000070  f89d0001          LDRB     r0,[sp,#1]
000074  7588              STRB     r0,[r1,#0x16]
;;;606          USBH_MSC_CBWData.field.CBWCB[8]  = (((uint8_t *)&nbOfPages)[0]) ; 
000076  f89d0000          LDRB     r0,[sp,#0]
00007a  75c8              STRB     r0,[r1,#0x17]
;;;607          
;;;608          
;;;609          USBH_MSC_BOTXferParam.BOTState = USBH_MSC_SEND_CBW;
00007c  713e              STRB     r6,[r7,#4]
;;;610          /* Start the transfer, then let the state machine 
;;;611          magage the other transactions */
;;;612          USBH_MSC_BOTXferParam.MSCState = USBH_MSC_BOT_USB_TRANSFERS;
00007e  2007              MOVS     r0,#7
000080  7038              STRB     r0,[r7,#0]
;;;613          USBH_MSC_BOTXferParam.BOTXferStatus = USBH_MSC_BUSY;
000082  f887900f          STRB     r9,[r7,#0xf]
;;;614          USBH_MSC_BOTXferParam.CmdStateMachine = CMD_WAIT_STATUS;
000086  f887b003          STRB     r11,[r7,#3]
;;;615          
;;;616          status = USBH_MSC_BUSY;
00008a  f8859000          STRB     r9,[r5,#0]
                  |L2.142|
;;;617          
;;;618          break;
00008e  e018              B        |L2.194|
                  |L2.144|
;;;619          
;;;620        case CMD_WAIT_STATUS:
;;;621          
;;;622          if((USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_OK) && \
000090  7bf8              LDRB     r0,[r7,#0xf]  ; USBH_MSC_BOTXferParam
000092  b938              CBNZ     r0,|L2.164|
;;;623            (HCD_IsDeviceConnected(pdev)))
000094  9801              LDR      r0,[sp,#4]
000096  f7fffffe          BL       HCD_IsDeviceConnected
00009a  b118              CBZ      r0,|L2.164|
;;;624          { 
;;;625            /* Commands successfully sent and Response Received  */       
;;;626            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
00009c  70fe              STRB     r6,[r7,#3]
;;;627            status = USBH_MSC_OK;      
00009e  f885a000          STRB     r10,[r5,#0]
0000a2  e00e              B        |L2.194|
                  |L2.164|
;;;628          }
;;;629          else if (( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_FAIL ) && \
0000a4  7bf8              LDRB     r0,[r7,#0xf]  ; USBH_MSC_BOTXferParam
0000a6  2801              CMP      r0,#1
0000a8  d105              BNE      |L2.182|
;;;630            (HCD_IsDeviceConnected(pdev)))
0000aa  9801              LDR      r0,[sp,#4]
0000ac  f7fffffe          BL       HCD_IsDeviceConnected
0000b0  b108              CBZ      r0,|L2.182|
;;;631          {
;;;632            /* Failure Mode */
;;;633            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
0000b2  70fe              STRB     r6,[r7,#3]
0000b4  e005              B        |L2.194|
                  |L2.182|
;;;634          }
;;;635          
;;;636          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_PHASE_ERROR )
0000b6  7bf8              LDRB     r0,[r7,#0xf]  ; USBH_MSC_BOTXferParam
0000b8  2802              CMP      r0,#2
0000ba  d102              BNE      |L2.194|
;;;637          {
;;;638            /* Failure Mode */
;;;639            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
0000bc  70fe              STRB     r6,[r7,#3]
;;;640            status = USBH_MSC_PHASE_ERROR;    
0000be  f885b000          STRB     r11,[r5,#0]
                  |L2.194|
;;;641          }
;;;642          else
;;;643          {
;;;644            /* Wait for the Commands to get Completed */
;;;645            /* NO Change in state Machine */
;;;646          }
;;;647          break;
;;;648          
;;;649        default:
;;;650          break;
;;;651        }
;;;652      }
;;;653      return status;
0000c2  7828              LDRB     r0,[r5,#0]  ; status
;;;654    }
0000c4  b005              ADD      sp,sp,#0x14
0000c6  e8bd8ff0          POP      {r4-r11,pc}
;;;655    
                          ENDP

0000ca  0000              DCW      0x0000
                  |L2.204|
                          DCD      ||.data||
                  |L2.208|
                          DCD      USBH_MSC_BOTXferParam
                  |L2.212|
                          DCD      USBH_MSC_CBWData

                          AREA ||i.USBH_MSC_ReadCapacity10||, CODE, READONLY, ALIGN=2

                  USBH_MSC_ReadCapacity10 PROC
;;;202      */
;;;203    uint8_t USBH_MSC_ReadCapacity10(USB_OTG_CORE_HANDLE *pdev)
000000  b570              PUSH     {r4-r6,lr}
;;;204    {
;;;205      uint8_t index;
;;;206      USBH_MSC_Status_TypeDef status = USBH_MSC_BUSY;
000002  2403              MOVS     r4,#3
;;;207      
;;;208      if(HCD_IsDeviceConnected(pdev))
000004  f7fffffe          BL       HCD_IsDeviceConnected
000008  b320              CBZ      r0,|L3.84|
;;;209      {  
;;;210        switch(USBH_MSC_BOTXferParam.CmdStateMachine)
00000a  4d22              LDR      r5,|L3.148|
00000c  2301              MOVS     r3,#1
;;;211        {
;;;212        case CMD_SEND_STATE:
;;;213          /*Prepare the CBW and relevent field*/
;;;214          USBH_MSC_CBWData.field.CBWTransferLength = XFER_LEN_READ_CAPACITY10;
;;;215          USBH_MSC_CBWData.field.CBWFlags = USB_EP_DIR_IN;
;;;216          USBH_MSC_CBWData.field.CBWLength = CBW_LENGTH;
;;;217          
;;;218          USBH_MSC_BOTXferParam.pRxTxBuff = USBH_DataInBuffer;
00000e  4822              LDR      r0,|L3.152|
000010  78e9              LDRB     r1,[r5,#3]            ;210  ; USBH_MSC_BOTXferParam
000012  2901              CMP      r1,#1                 ;210
000014  d002              BEQ      |L3.28|
000016  2902              CMP      r1,#2                 ;210
000018  d13a              BNE      |L3.144|
00001a  e01c              B        |L3.86|
                  |L3.28|
00001c  491f              LDR      r1,|L3.156|
00001e  2208              MOVS     r2,#8                 ;214
000020  608a              STR      r2,[r1,#8]            ;215  ; USBH_MSC_CBWData
000022  2280              MOVS     r2,#0x80              ;215
000024  730a              STRB     r2,[r1,#0xc]          ;215
000026  220a              MOVS     r2,#0xa               ;216
000028  738a              STRB     r2,[r1,#0xe]          ;216
;;;219          USBH_MSC_BOTXferParam.MSCStateCurrent = USBH_MSC_READ_CAPACITY10;
00002a  60a8              STR      r0,[r5,#8]  ; USBH_MSC_BOTXferParam
00002c  2004              MOVS     r0,#4
00002e  70a8              STRB     r0,[r5,#2]
;;;220          
;;;221          for(index = CBW_CB_LENGTH; index != 0; index--)
000030  2010              MOVS     r0,#0x10
000032  2200              MOVS     r2,#0
                  |L3.52|
;;;222          {
;;;223            USBH_MSC_CBWData.field.CBWCB[index] = 0x00;
000034  180c              ADDS     r4,r1,r0
000036  1e40              SUBS     r0,r0,#1
000038  73e2              STRB     r2,[r4,#0xf]
00003a  f01000ff          ANDS     r0,r0,#0xff           ;221
00003e  d1f9              BNE      |L3.52|
;;;224          }    
;;;225          
;;;226          USBH_MSC_CBWData.field.CBWCB[0]  = OPCODE_READ_CAPACITY10; 
000040  2025              MOVS     r0,#0x25
000042  73c8              STRB     r0,[r1,#0xf]
;;;227          USBH_MSC_BOTXferParam.BOTState = USBH_MSC_SEND_CBW;
000044  712b              STRB     r3,[r5,#4]
;;;228          
;;;229          /* Start the transfer, then let the state machine manage the other 
;;;230                                                                    transactions */
;;;231          USBH_MSC_BOTXferParam.MSCState = USBH_MSC_BOT_USB_TRANSFERS;
000046  2007              MOVS     r0,#7
000048  7028              STRB     r0,[r5,#0]
;;;232          USBH_MSC_BOTXferParam.BOTXferStatus = USBH_MSC_BUSY;
00004a  2003              MOVS     r0,#3
00004c  73e8              STRB     r0,[r5,#0xf]
;;;233          USBH_MSC_BOTXferParam.CmdStateMachine = CMD_WAIT_STATUS;
00004e  2002              MOVS     r0,#2
000050  70e8              STRB     r0,[r5,#3]
;;;234          
;;;235          status = USBH_MSC_BUSY;
000052  2403              MOVS     r4,#3
                  |L3.84|
;;;236          break;
000054  e01c              B        |L3.144|
                  |L3.86|
;;;237          
;;;238        case CMD_WAIT_STATUS:
;;;239          if(USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_OK)
000056  7be9              LDRB     r1,[r5,#0xf]  ; USBH_MSC_BOTXferParam
000058  b121              CBZ      r1,|L3.100|
;;;240          {
;;;241            /*assign the capacity*/
;;;242            (((uint8_t*)&USBH_MSC_Param.MSCapacity )[3]) = USBH_DataInBuffer[0];
;;;243            (((uint8_t*)&USBH_MSC_Param.MSCapacity )[2]) = USBH_DataInBuffer[1];
;;;244            (((uint8_t*)&USBH_MSC_Param.MSCapacity )[1]) = USBH_DataInBuffer[2];
;;;245            (((uint8_t*)&USBH_MSC_Param.MSCapacity )[0]) = USBH_DataInBuffer[3];
;;;246            
;;;247            /*assign the page length*/
;;;248            (((uint8_t*)&USBH_MSC_Param.MSPageLength )[1]) = USBH_DataInBuffer[6];
;;;249            (((uint8_t*)&USBH_MSC_Param.MSPageLength )[0]) = USBH_DataInBuffer[7];
;;;250            
;;;251            /* Commands successfully sent and Response Received  */       
;;;252            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;253            status = USBH_MSC_OK;      
;;;254          }
;;;255          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_FAIL )
00005a  2901              CMP      r1,#1
00005c  d013              BEQ      |L3.134|
;;;256          {
;;;257            /* Failure Mode */
;;;258            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;259            status = USBH_MSC_FAIL;
;;;260          }  
;;;261          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_PHASE_ERROR )
00005e  2902              CMP      r1,#2
000060  d014              BEQ      |L3.140|
000062  e015              B        |L3.144|
                  |L3.100|
000064  490c              LDR      r1,|L3.152|
000066  7802              LDRB     r2,[r0,#0]            ;242  ; USBH_DataInBuffer
000068  3910              SUBS     r1,r1,#0x10           ;242
00006a  2400              MOVS     r4,#0                 ;253
00006c  70ca              STRB     r2,[r1,#3]            ;242
00006e  7842              LDRB     r2,[r0,#1]            ;243  ; USBH_DataInBuffer
000070  708a              STRB     r2,[r1,#2]            ;243
000072  7882              LDRB     r2,[r0,#2]            ;244  ; USBH_DataInBuffer
000074  704a              STRB     r2,[r1,#1]            ;244
000076  78c2              LDRB     r2,[r0,#3]            ;245  ; USBH_DataInBuffer
000078  700a              STRB     r2,[r1,#0]            ;245
00007a  7982              LDRB     r2,[r0,#6]            ;248  ; USBH_DataInBuffer
00007c  724a              STRB     r2,[r1,#9]            ;248
00007e  79c0              LDRB     r0,[r0,#7]            ;249  ; USBH_DataInBuffer
000080  7208              STRB     r0,[r1,#8]            ;249
000082  70eb              STRB     r3,[r5,#3]            ;252
000084  e004              B        |L3.144|
                  |L3.134|
000086  70eb              STRB     r3,[r5,#3]            ;258
000088  2401              MOVS     r4,#1                 ;259
00008a  e001              B        |L3.144|
                  |L3.140|
;;;262          {
;;;263            /* Failure Mode */
;;;264            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
00008c  70eb              STRB     r3,[r5,#3]
;;;265            status = USBH_MSC_PHASE_ERROR;    
00008e  2402              MOVS     r4,#2
                  |L3.144|
;;;266          } 
;;;267          else
;;;268          {
;;;269            /* Wait for the Commands to get Completed */
;;;270            /* NO Change in state Machine */
;;;271          }
;;;272          break;
;;;273          
;;;274        default:
;;;275          break;
;;;276        }
;;;277      }
;;;278      return status;
000090  4620              MOV      r0,r4
;;;279    }
000092  bd70              POP      {r4-r6,pc}
;;;280    
                          ENDP

                  |L3.148|
                          DCD      USBH_MSC_BOTXferParam
                  |L3.152|
                          DCD      ||.bss||+0x10
                  |L3.156|
                          DCD      USBH_MSC_CBWData

                          AREA ||i.USBH_MSC_RequestSense||, CODE, READONLY, ALIGN=2

                  USBH_MSC_RequestSense PROC
;;;380      */
;;;381    uint8_t USBH_MSC_RequestSense(USB_OTG_CORE_HANDLE *pdev)
000000  b570              PUSH     {r4-r6,lr}
;;;382    {
;;;383      USBH_MSC_Status_TypeDef status = USBH_MSC_BUSY;
000002  2403              MOVS     r4,#3
;;;384      
;;;385      uint8_t index;
;;;386      
;;;387      
;;;388      if(HCD_IsDeviceConnected(pdev))
000004  f7fffffe          BL       HCD_IsDeviceConnected
000008  b338              CBZ      r0,|L4.90|
;;;389      {  
;;;390        switch(USBH_MSC_BOTXferParam.CmdStateMachine)
00000a  4d22              LDR      r5,|L4.148|
00000c  2301              MOVS     r3,#1
;;;391        {
;;;392        case CMD_SEND_STATE:
;;;393          
;;;394          /*Prepare the CBW and relevent field*/
;;;395          USBH_MSC_CBWData.field.CBWTransferLength = \
;;;396                                                    ALLOCATION_LENGTH_REQUEST_SENSE;
;;;397          USBH_MSC_CBWData.field.CBWFlags = USB_EP_DIR_IN;
;;;398          USBH_MSC_CBWData.field.CBWLength = CBW_LENGTH;
;;;399          
;;;400          USBH_MSC_BOTXferParam.pRxTxBuff = USBH_DataInBuffer;
00000e  4a22              LDR      r2,|L4.152|
000010  78e8              LDRB     r0,[r5,#3]            ;390  ; USBH_MSC_BOTXferParam
000012  2801              CMP      r0,#1                 ;390
000014  d002              BEQ      |L4.28|
000016  2802              CMP      r0,#2                 ;390
000018  d139              BNE      |L4.142|
00001a  e01f              B        |L4.92|
                  |L4.28|
00001c  491f              LDR      r1,|L4.156|
00001e  243f              MOVS     r4,#0x3f              ;395
000020  2080              MOVS     r0,#0x80              ;397
000022  608c              STR      r4,[r1,#8]            ;397  ; USBH_MSC_CBWData
000024  7308              STRB     r0,[r1,#0xc]          ;397
000026  200a              MOVS     r0,#0xa               ;398
000028  7388              STRB     r0,[r1,#0xe]          ;398
;;;401          USBH_MSC_BOTXferParam.MSCStateBkp = USBH_MSC_BOTXferParam.MSCStateCurrent;
00002a  60aa              STR      r2,[r5,#8]  ; USBH_MSC_BOTXferParam
00002c  78a8              LDRB     r0,[r5,#2]  ; USBH_MSC_BOTXferParam
00002e  7068              STRB     r0,[r5,#1]
;;;402          USBH_MSC_BOTXferParam.MSCStateCurrent = USBH_MSC_REQUEST_SENSE;
000030  2006              MOVS     r0,#6
000032  70a8              STRB     r0,[r5,#2]
;;;403          
;;;404    
;;;405          for(index = CBW_CB_LENGTH; index != 0; index--)
000034  2010              MOVS     r0,#0x10
000036  2200              MOVS     r2,#0
                  |L4.56|
;;;406          {
;;;407            USBH_MSC_CBWData.field.CBWCB[index] = 0x00;
000038  180e              ADDS     r6,r1,r0
00003a  1e40              SUBS     r0,r0,#1
00003c  73f2              STRB     r2,[r6,#0xf]
00003e  f01000ff          ANDS     r0,r0,#0xff           ;405
000042  d1f9              BNE      |L4.56|
;;;408          }    
;;;409          
;;;410          USBH_MSC_CBWData.field.CBWCB[0]  = OPCODE_REQUEST_SENSE; 
000044  2003              MOVS     r0,#3
000046  73c8              STRB     r0,[r1,#0xf]
;;;411          USBH_MSC_CBWData.field.CBWCB[1]  = DESC_REQUEST_SENSE;
000048  740a              STRB     r2,[r1,#0x10]
;;;412          USBH_MSC_CBWData.field.CBWCB[4]  = ALLOCATION_LENGTH_REQUEST_SENSE;
00004a  74cc              STRB     r4,[r1,#0x13]
;;;413          
;;;414          USBH_MSC_BOTXferParam.BOTState = USBH_MSC_SEND_CBW;
00004c  712b              STRB     r3,[r5,#4]
;;;415          /* Start the transfer, then let the state machine magage 
;;;416          the other transactions */
;;;417          USBH_MSC_BOTXferParam.MSCState = USBH_MSC_BOT_USB_TRANSFERS;
00004e  2107              MOVS     r1,#7
000050  7029              STRB     r1,[r5,#0]
;;;418          USBH_MSC_BOTXferParam.BOTXferStatus = USBH_MSC_BUSY;
000052  73e8              STRB     r0,[r5,#0xf]
;;;419          USBH_MSC_BOTXferParam.CmdStateMachine = CMD_WAIT_STATUS;
000054  2002              MOVS     r0,#2
000056  70e8              STRB     r0,[r5,#3]
;;;420          
;;;421          status = USBH_MSC_BUSY;
000058  2403              MOVS     r4,#3
                  |L4.90|
;;;422          
;;;423          break;
00005a  e018              B        |L4.142|
                  |L4.92|
;;;424          
;;;425        case CMD_WAIT_STATUS:
;;;426          
;;;427          if(USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_OK)
00005c  7be8              LDRB     r0,[r5,#0xf]  ; USBH_MSC_BOTXferParam
00005e  b120              CBZ      r0,|L4.106|
;;;428          {
;;;429            /* Get Sense data*/
;;;430            (((uint8_t*)&USBH_MSC_Param.MSSenseKey )[3]) = USBH_DataInBuffer[0];
;;;431            (((uint8_t*)&USBH_MSC_Param.MSSenseKey )[2]) = USBH_DataInBuffer[1];
;;;432            (((uint8_t*)&USBH_MSC_Param.MSSenseKey )[1]) = USBH_DataInBuffer[2];
;;;433            (((uint8_t*)&USBH_MSC_Param.MSSenseKey )[0]) = USBH_DataInBuffer[3];
;;;434            
;;;435            /* Commands successfully sent and Response Received  */       
;;;436            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;437            status = USBH_MSC_OK;      
;;;438          }
;;;439          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_FAIL )
000060  2801              CMP      r0,#1
000062  d00f              BEQ      |L4.132|
;;;440          {
;;;441            /* Failure Mode */
;;;442            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;443            status = USBH_MSC_FAIL;
;;;444          }
;;;445          
;;;446          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_PHASE_ERROR )
000064  2802              CMP      r0,#2
000066  d010              BEQ      |L4.138|
000068  e011              B        |L4.142|
                  |L4.106|
00006a  480b              LDR      r0,|L4.152|
00006c  7811              LDRB     r1,[r2,#0]            ;430  ; USBH_DataInBuffer
00006e  3810              SUBS     r0,r0,#0x10           ;430
000070  2400              MOVS     r4,#0                 ;437
000072  71c1              STRB     r1,[r0,#7]            ;430
000074  7851              LDRB     r1,[r2,#1]            ;431  ; USBH_DataInBuffer
000076  7181              STRB     r1,[r0,#6]            ;431
000078  7891              LDRB     r1,[r2,#2]            ;432  ; USBH_DataInBuffer
00007a  7141              STRB     r1,[r0,#5]            ;432
00007c  78d1              LDRB     r1,[r2,#3]            ;433  ; USBH_DataInBuffer
00007e  7101              STRB     r1,[r0,#4]            ;433
000080  70eb              STRB     r3,[r5,#3]            ;436
000082  e004              B        |L4.142|
                  |L4.132|
000084  70eb              STRB     r3,[r5,#3]            ;442
000086  2401              MOVS     r4,#1                 ;443
000088  e001              B        |L4.142|
                  |L4.138|
;;;447          {
;;;448            /* Failure Mode */
;;;449            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
00008a  70eb              STRB     r3,[r5,#3]
;;;450            status = USBH_MSC_PHASE_ERROR;    
00008c  2402              MOVS     r4,#2
                  |L4.142|
;;;451          }
;;;452          
;;;453          else
;;;454          {
;;;455            /* Wait for the Commands to get Completed */
;;;456            /* NO Change in state Machine */
;;;457          }
;;;458          break;
;;;459          
;;;460        default:
;;;461          break;
;;;462        }
;;;463      }
;;;464      return status;
00008e  4620              MOV      r0,r4
;;;465    }
000090  bd70              POP      {r4-r6,pc}
;;;466    
                          ENDP

000092  0000              DCW      0x0000
                  |L4.148|
                          DCD      USBH_MSC_BOTXferParam
                  |L4.152|
                          DCD      ||.bss||+0x10
                  |L4.156|
                          DCD      USBH_MSC_CBWData

                          AREA ||i.USBH_MSC_TestUnitReady||, CODE, READONLY, ALIGN=2

                  USBH_MSC_TestUnitReady PROC
;;;130      */
;;;131    uint8_t USBH_MSC_TestUnitReady (USB_OTG_CORE_HANDLE *pdev)
000000  b570              PUSH     {r4-r6,lr}
;;;132    {
;;;133      uint8_t index;
;;;134      USBH_MSC_Status_TypeDef status = USBH_MSC_BUSY;
000002  2403              MOVS     r4,#3
;;;135      
;;;136      if(HCD_IsDeviceConnected(pdev))
000004  f7fffffe          BL       HCD_IsDeviceConnected
000008  b310              CBZ      r0,|L5.80|
;;;137      {  
;;;138        switch(USBH_MSC_BOTXferParam.CmdStateMachine)
00000a  4d1a              LDR      r5,|L5.116|
00000c  2301              MOVS     r3,#1
00000e  78e8              LDRB     r0,[r5,#3]  ; USBH_MSC_BOTXferParam
000010  2801              CMP      r0,#1
000012  d002              BEQ      |L5.26|
000014  2802              CMP      r0,#2
000016  d12b              BNE      |L5.112|
000018  e01b              B        |L5.82|
                  |L5.26|
;;;139        {
;;;140        case CMD_SEND_STATE:  
;;;141          /*Prepare the CBW and relevent field*/
;;;142          USBH_MSC_CBWData.field.CBWTransferLength = 0;       /* No Data Transfer */
00001a  4917              LDR      r1,|L5.120|
00001c  2200              MOVS     r2,#0
;;;143          USBH_MSC_CBWData.field.CBWFlags = USB_EP_DIR_OUT;
;;;144          USBH_MSC_CBWData.field.CBWLength = CBW_LENGTH_TEST_UNIT_READY;
00001e  2006              MOVS     r0,#6
000020  608a              STR      r2,[r1,#8]            ;143  ; USBH_MSC_CBWData
000022  730a              STRB     r2,[r1,#0xc]          ;143
000024  7388              STRB     r0,[r1,#0xe]
;;;145          USBH_MSC_BOTXferParam.pRxTxBuff = USBH_MSC_CSWData.CSWArray;
000026  4815              LDR      r0,|L5.124|
;;;146          USBH_MSC_BOTXferParam.DataLength = USBH_MSC_CSW_MAX_LENGTH;
000028  60a8              STR      r0,[r5,#8]  ; USBH_MSC_BOTXferParam
00002a  203f              MOVS     r0,#0x3f
00002c  81a8              STRH     r0,[r5,#0xc]
;;;147          USBH_MSC_BOTXferParam.MSCStateCurrent = USBH_MSC_TEST_UNIT_READY;
00002e  2403              MOVS     r4,#3
000030  70ac              STRB     r4,[r5,#2]
;;;148          
;;;149          for(index = CBW_CB_LENGTH; index != 0; index--)
000032  2010              MOVS     r0,#0x10
                  |L5.52|
;;;150          {
;;;151            USBH_MSC_CBWData.field.CBWCB[index] = 0x00;
000034  180e              ADDS     r6,r1,r0
000036  1e40              SUBS     r0,r0,#1
000038  73f2              STRB     r2,[r6,#0xf]
00003a  f01000ff          ANDS     r0,r0,#0xff           ;149
00003e  d1f9              BNE      |L5.52|
;;;152          }
;;;153          
;;;154          USBH_MSC_CBWData.field.CBWCB[0]  = OPCODE_TEST_UNIT_READY; 
000040  73ca              STRB     r2,[r1,#0xf]
;;;155          USBH_MSC_BOTXferParam.BOTState = USBH_MSC_SEND_CBW;
000042  712b              STRB     r3,[r5,#4]
;;;156          /* Start the transfer, then let the state 
;;;157          machine magage the other transactions */
;;;158          USBH_MSC_BOTXferParam.MSCState = USBH_MSC_BOT_USB_TRANSFERS;
000044  2007              MOVS     r0,#7
000046  7028              STRB     r0,[r5,#0]
;;;159          USBH_MSC_BOTXferParam.BOTXferStatus = USBH_MSC_BUSY;
000048  73ec              STRB     r4,[r5,#0xf]
;;;160          USBH_MSC_BOTXferParam.CmdStateMachine = CMD_WAIT_STATUS;
00004a  2002              MOVS     r0,#2
00004c  70e8              STRB     r0,[r5,#3]
;;;161          
;;;162          status = USBH_MSC_BUSY; 
00004e  2403              MOVS     r4,#3
                  |L5.80|
;;;163          break;
000050  e00e              B        |L5.112|
                  |L5.82|
;;;164          
;;;165        case CMD_WAIT_STATUS: 
;;;166          if(USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_OK)
000052  7be8              LDRB     r0,[r5,#0xf]  ; USBH_MSC_BOTXferParam
000054  b120              CBZ      r0,|L5.96|
;;;167          { 
;;;168            /* Commands successfully sent and Response Received  */       
;;;169            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;170           
;;;171            status = USBH_MSC_OK;      
;;;172          }
;;;173          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_FAIL )
000056  2801              CMP      r0,#1
000058  d005              BEQ      |L5.102|
;;;174          {
;;;175            /* Failure Mode */
;;;176            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;177            status = USBH_MSC_FAIL;
;;;178          }
;;;179          
;;;180          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_PHASE_ERROR )
00005a  2802              CMP      r0,#2
00005c  d006              BEQ      |L5.108|
00005e  e007              B        |L5.112|
                  |L5.96|
000060  70eb              STRB     r3,[r5,#3]            ;169
000062  2400              MOVS     r4,#0                 ;171
000064  e004              B        |L5.112|
                  |L5.102|
000066  70eb              STRB     r3,[r5,#3]            ;176
000068  2401              MOVS     r4,#1                 ;177
00006a  e001              B        |L5.112|
                  |L5.108|
;;;181          {
;;;182            /* Failure Mode */
;;;183            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
00006c  70eb              STRB     r3,[r5,#3]
;;;184            status = USBH_MSC_PHASE_ERROR;    
00006e  2402              MOVS     r4,#2
                  |L5.112|
;;;185          }  
;;;186          break;
;;;187          
;;;188        default:
;;;189          break;
;;;190        }
;;;191      }
;;;192      return status;
000070  4620              MOV      r0,r4
;;;193    }
000072  bd70              POP      {r4-r6,pc}
;;;194    
                          ENDP

                  |L5.116|
                          DCD      USBH_MSC_BOTXferParam
                  |L5.120|
                          DCD      USBH_MSC_CBWData
                  |L5.124|
                          DCD      USBH_MSC_CSWData

                          AREA ||i.USBH_MSC_Write10||, CODE, READONLY, ALIGN=2

                  USBH_MSC_Write10 PROC
;;;476      */
;;;477    uint8_t USBH_MSC_Write10(USB_OTG_CORE_HANDLE *pdev, 
000000  b5f8              PUSH     {r3-r7,lr}
;;;478                             uint8_t *dataBuffer,
;;;479                             uint32_t address,
;;;480                             uint32_t nbOfbytes)
;;;481    {
000002  461e              MOV      r6,r3
000004  4615              MOV      r5,r2
000006  460f              MOV      r7,r1
;;;482      uint8_t index;
;;;483      USBH_MSC_Status_TypeDef status = USBH_MSC_BUSY;
000008  2403              MOVS     r4,#3
;;;484      uint16_t nbOfPages;
;;;485      
;;;486      if(HCD_IsDeviceConnected(pdev))
00000a  f7fffffe          BL       HCD_IsDeviceConnected
00000e  b378              CBZ      r0,|L6.112|
;;;487      {  
;;;488        switch(USBH_MSC_BOTXferParam.CmdStateMachine)
000010  4b20              LDR      r3,|L6.148|
000012  2201              MOVS     r2,#1
000014  78d8              LDRB     r0,[r3,#3]  ; USBH_MSC_BOTXferParam
000016  2801              CMP      r0,#1
000018  d002              BEQ      |L6.32|
00001a  2802              CMP      r0,#2
00001c  d137              BNE      |L6.142|
00001e  e028              B        |L6.114|
                  |L6.32|
;;;489        {
;;;490        case CMD_SEND_STATE:   
;;;491          USBH_MSC_CBWData.field.CBWTransferLength = nbOfbytes;
000020  4c1d              LDR      r4,|L6.152|
;;;492          USBH_MSC_CBWData.field.CBWFlags = USB_EP_DIR_OUT;
000022  2100              MOVS     r1,#0
;;;493          USBH_MSC_CBWData.field.CBWLength = CBW_LENGTH;
000024  200a              MOVS     r0,#0xa
000026  60a6              STR      r6,[r4,#8]            ;492  ; USBH_MSC_CBWData
000028  7321              STRB     r1,[r4,#0xc]          ;492
00002a  73a0              STRB     r0,[r4,#0xe]
;;;494          USBH_MSC_BOTXferParam.pRxTxBuff = dataBuffer;
;;;495          
;;;496          
;;;497          for(index = CBW_CB_LENGTH; index != 0; index--)  
00002c  2010              MOVS     r0,#0x10
00002e  609f              STR      r7,[r3,#8]  ; USBH_MSC_BOTXferParam
                  |L6.48|
;;;498          {
;;;499            USBH_MSC_CBWData.field.CBWCB[index] = 0x00;
000030  1827              ADDS     r7,r4,r0
000032  1e40              SUBS     r0,r0,#1
000034  73f9              STRB     r1,[r7,#0xf]
000036  f01000ff          ANDS     r0,r0,#0xff           ;497
00003a  d1f9              BNE      |L6.48|
;;;500          }
;;;501          
;;;502          USBH_MSC_CBWData.field.CBWCB[0]  = OPCODE_WRITE10; 
00003c  202a              MOVS     r0,#0x2a
00003e  73e0              STRB     r0,[r4,#0xf]
000040  0e28              LSRS     r0,r5,#24
;;;503          
;;;504          /*logical block address*/
;;;505          USBH_MSC_CBWData.field.CBWCB[2]  = (((uint8_t*)&address)[3]) ;
000042  7460              STRB     r0,[r4,#0x11]
000044  0c28              LSRS     r0,r5,#16
;;;506          USBH_MSC_CBWData.field.CBWCB[3]  = (((uint8_t*)&address)[2]);
000046  74a0              STRB     r0,[r4,#0x12]
000048  0a28              LSRS     r0,r5,#8
;;;507          USBH_MSC_CBWData.field.CBWCB[4]  = (((uint8_t*)&address)[1]);
00004a  74e0              STRB     r0,[r4,#0x13]
;;;508          USBH_MSC_CBWData.field.CBWCB[5]  = (((uint8_t*)&address)[0]);
00004c  7525              STRB     r5,[r4,#0x14]
;;;509          
;;;510          /*USBH_MSC_PAGE_LENGTH = 512*/
;;;511          nbOfPages = nbOfbytes/ USBH_MSC_PAGE_LENGTH; 
00004e  0a70              LSRS     r0,r6,#9
000050  f8ad0000          STRH     r0,[sp,#0]
;;;512          
;;;513          /*Tranfer length */
;;;514          USBH_MSC_CBWData.field.CBWCB[7]  = (((uint8_t *)&nbOfPages)[1]) ; 
000054  f89d0001          LDRB     r0,[sp,#1]
000058  75a0              STRB     r0,[r4,#0x16]
;;;515          USBH_MSC_CBWData.field.CBWCB[8]  = (((uint8_t *)&nbOfPages)[0]) ; 
00005a  f89d0000          LDRB     r0,[sp,#0]
00005e  75e0              STRB     r0,[r4,#0x17]
;;;516          
;;;517          USBH_MSC_BOTXferParam.BOTState = USBH_MSC_SEND_CBW;
000060  711a              STRB     r2,[r3,#4]
;;;518          /* Start the transfer, then let the state machine 
;;;519          magage the other transactions */
;;;520          USBH_MSC_BOTXferParam.MSCState = USBH_MSC_BOT_USB_TRANSFERS;
000062  2007              MOVS     r0,#7
000064  7018              STRB     r0,[r3,#0]
;;;521          USBH_MSC_BOTXferParam.BOTXferStatus = USBH_MSC_BUSY;
000066  2003              MOVS     r0,#3
000068  73d8              STRB     r0,[r3,#0xf]
;;;522          USBH_MSC_BOTXferParam.CmdStateMachine = CMD_WAIT_STATUS;
00006a  2002              MOVS     r0,#2
00006c  70d8              STRB     r0,[r3,#3]
;;;523          
;;;524          status = USBH_MSC_BUSY;
00006e  2403              MOVS     r4,#3
                  |L6.112|
;;;525          
;;;526          break;
000070  e00d              B        |L6.142|
                  |L6.114|
;;;527          
;;;528        case CMD_WAIT_STATUS:
;;;529          if(USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_OK)
000072  7bd8              LDRB     r0,[r3,#0xf]  ; USBH_MSC_BOTXferParam
000074  b120              CBZ      r0,|L6.128|
;;;530          { 
;;;531            /* Commands successfully sent and Response Received  */       
;;;532            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;533            status = USBH_MSC_OK;      
;;;534          }
;;;535          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_FAIL )
000076  2801              CMP      r0,#1
000078  d005              BEQ      |L6.134|
;;;536          {
;;;537            /* Failure Mode */
;;;538            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
;;;539          }
;;;540          
;;;541          else if ( USBH_MSC_BOTXferParam.BOTXferStatus == USBH_MSC_PHASE_ERROR )
00007a  2802              CMP      r0,#2
00007c  d005              BEQ      |L6.138|
00007e  e006              B        |L6.142|
                  |L6.128|
000080  70da              STRB     r2,[r3,#3]            ;532
000082  2400              MOVS     r4,#0                 ;533
000084  e003              B        |L6.142|
                  |L6.134|
000086  70da              STRB     r2,[r3,#3]            ;538
000088  e001              B        |L6.142|
                  |L6.138|
;;;542          {
;;;543            /* Failure Mode */
;;;544            USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;
00008a  70da              STRB     r2,[r3,#3]
;;;545            status = USBH_MSC_PHASE_ERROR;    
00008c  2402              MOVS     r4,#2
                  |L6.142|
;;;546          }
;;;547          break;
;;;548          
;;;549        default:
;;;550          break;
;;;551        }
;;;552      }
;;;553      return status;
00008e  4620              MOV      r0,r4
;;;554    }
000090  bdf8              POP      {r3-r7,pc}
;;;555    
                          ENDP

000092  0000              DCW      0x0000
                  |L6.148|
                          DCD      USBH_MSC_BOTXferParam
                  |L6.152|
                          DCD      USBH_MSC_CBWData

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  USBH_MSC_Param
                          %        16
                  USBH_DataInBuffer
                          %        512

                          AREA ||area_number.9||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.bss||
                  USBH_DataOutBuffer
                          %        512

                          AREA ||.data||, DATA, ALIGN=0

                  status
000000  03                DCB      0x03

;*** Start embedded assembler ***

#line 1 "..\\USB\\STM32_USB_HOST_Library\\Class\\MSC\\src\\usbh_msc_scsi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_usbh_msc_scsi_c_24537368____REV16|
#line 129 "E:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_usbh_msc_scsi_c_24537368____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_usbh_msc_scsi_c_24537368____REVSH|
#line 144
|__asm___15_usbh_msc_scsi_c_24537368____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
